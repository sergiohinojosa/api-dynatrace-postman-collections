{
	"info": {
		"_postman_id": "39eab3d0-38e8-44de-8a65-d63d48afdafc",
		"name": "Dynatrace Environment API v1 (200)",
		"description": "Documentation of the Dynatrace Environment API v1. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "deployment",
			"item": [
				{
					"name": "installer",
					"item": [
						{
							"name": "agent",
							"item": [
								{
									"name": "connectioninfo",
									"item": [
										{
											"name": "Gets the connectivity information for OneAgent",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/agent/connectioninfo",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"agent",
														"connectioninfo"
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/agent/connectioninfo",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"agent",
																"connectioninfo"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"tenantUUID\": \"non\",\n \"tenantToken\": \"sunt consectetur dolor\",\n \"communicationEndpoints\": [\n  \"veniam qui amet Duis est\",\n  \"id magna sed\"\n ]\n}"
												}
											]
										},
										{
											"name": "Gets the list of the ActiveGate-Endpoints to be used for Agents ordered by networkzone-priorities. | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/agent/connectioninfo/endpoints?networkZone=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"agent",
														"connectioninfo",
														"endpoints"
													],
													"query": [
														{
															"key": "networkZone",
															"value": "<string>"
														}
													]
												},
												"description": "Highest priority first, separated by a semicolon.If no network zone provided the default zone is used. Responds with 404 if network zone is not known."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/agent/connectioninfo/endpoints?networkZone=<string>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"agent",
																"connectioninfo",
																"endpoints"
															],
															"query": [
																{
																	"key": "networkZone",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{os Type}/{installer Type}",
									"item": [
										{
											"name": "latest",
											"item": [
												{
													"name": "Downloads the latest OneAgent installer",
													"request": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/latest?flavor=default&arch=all&bitness=all&include=All&skipMetadata=false",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"agent",
																":osType",
																":installerType",
																"latest"
															],
															"query": [
																{
																	"key": "flavor",
																	"value": "default",
																	"description": "The flavor of your Linux distribution. \n\n Set `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n\n Only applicable to the `paas` and `paas-sh` installer types."
																},
																{
																	"key": "arch",
																	"value": "all",
																	"description": "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types."
																},
																{
																	"key": "bitness",
																	"value": "all",
																	"description": "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types."
																},
																{
																	"key": "include",
																	"value": "All",
																	"description": "The code modules to be included to the installer. You can specify several modules in the following format: `include=java&include=dotnet`. \n\nOnly applicable to the `paas` and `paas-sh` installer types."
																},
																{
																	"key": "skipMetadata",
																	"value": "false",
																	"description": "Set `true` to omit the OneAgent connectivity information from the installer. \n\n Only applicable to the `paas` and `paas-sh` installer types."
																}
															],
															"variable": [
																{
																	"key": "osType",
																	"value": "<string>",
																	"description": "(Required) The operating system of the installer."
																},
																{
																	"key": "installerType",
																	"value": "<string>",
																	"description": "(Required) The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive."
																}
															]
														},
														"description": "For the `paas` or `paas-sh` installer types you can get a configuring installer, by passing additional parameters."
													},
													"response": [
														{
															"name": "Not modified. You already have the latest version of the installer. The response does not contain a payload.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																		"key": "If-None-Match",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/latest?flavor=default&arch=all&bitness=all&include=All&skipMetadata=false",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"deployment",
																		"installer",
																		"agent",
																		":osType",
																		":installerType",
																		"latest"
																	],
																	"query": [
																		{
																			"key": "flavor",
																			"value": "default"
																		},
																		{
																			"key": "arch",
																			"value": "all"
																		},
																		{
																			"key": "bitness",
																			"value": "all"
																		},
																		{
																			"key": "include",
																			"value": "All"
																		},
																		{
																			"key": "skipMetadata",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "osType"
																		},
																		{
																			"key": "installerType"
																		}
																	]
																}
															},
															"status": "Not Modified",
															"code": 304,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Success. The payload contains the installer file.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																		"key": "If-None-Match",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/latest?flavor=default&arch=all&bitness=all&include=All&skipMetadata=false",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"deployment",
																		"installer",
																		"agent",
																		":osType",
																		":installerType",
																		"latest"
																	],
																	"query": [
																		{
																			"key": "flavor",
																			"value": "default"
																		},
																		{
																			"key": "arch",
																			"value": "all"
																		},
																		{
																			"key": "bitness",
																			"value": "all"
																		},
																		{
																			"key": "include",
																			"value": "All"
																		},
																		{
																			"key": "skipMetadata",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "osType"
																		},
																		{
																			"key": "installerType"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Gets the latest available version of the OneAgent installer of the specified type",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/latest/metainfo?flavor=default&arch=all&bitness=all",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"agent",
																":osType",
																":installerType",
																"latest",
																"metainfo"
															],
															"query": [
																{
																	"key": "flavor",
																	"value": "default",
																	"description": "The flavor of your Linux distribution. \n\n Set `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n\n Only applicable to the `paas` and `paas-sh` installer types."
																},
																{
																	"key": "arch",
																	"value": "all",
																	"description": "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types."
																},
																{
																	"key": "bitness",
																	"value": "all",
																	"description": "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types."
																}
															],
															"variable": [
																{
																	"key": "osType",
																	"value": "<string>",
																	"description": "(Required) The operating system of the installer."
																},
																{
																	"key": "installerType",
																	"value": "<string>",
																	"description": "(Required) The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive."
																}
															]
														},
														"description": "Returns the OneAgent version of the installer of the specified type. \n\nNon-required parameters are only applicable to the `paas` and `paas-sh` installer types."
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/latest/metainfo?flavor=default&arch=all&bitness=all",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"deployment",
																		"installer",
																		"agent",
																		":osType",
																		":installerType",
																		"latest",
																		"metainfo"
																	],
																	"query": [
																		{
																			"key": "flavor",
																			"value": "default"
																		},
																		{
																			"key": "arch",
																			"value": "all"
																		},
																		{
																			"key": "bitness",
																			"value": "all"
																		}
																	],
																	"variable": [
																		{
																			"key": "osType"
																		},
																		{
																			"key": "installerType"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"latestAgentVersion\": \"proident sint\"\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Downloads OneAgent installer of the specified version",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/version/:version?flavor=default&arch=all&bitness=all&include=All&skipMetadata=false",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"agent",
														":osType",
														":installerType",
														"version",
														":version"
													],
													"query": [
														{
															"key": "flavor",
															"value": "default",
															"description": "The flavor of your Linux distribution. \n\n Set `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n\n Only applicable to the `paas` and `paas-sh` installer types."
														},
														{
															"key": "arch",
															"value": "all",
															"description": "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types."
														},
														{
															"key": "bitness",
															"value": "all",
															"description": "The bitness of your OS. Must be supported by the OS. \n\n Only applicable to the `paas` and `paas-sh` installer types."
														},
														{
															"key": "include",
															"value": "All",
															"description": "The code modules to be included to the installer. You can specify several modules in the following format: `include=java&include=dotnet`. \n\nOnly applicable to the `paas` and `paas-sh` installer types."
														},
														{
															"key": "skipMetadata",
															"value": "false",
															"description": "Set `true` to omit the OneAgent connectivity information from the installer. \n\n Only applicable to the `paas` and `paas-sh` installer types."
														}
													],
													"variable": [
														{
															"key": "osType",
															"value": "<string>",
															"description": "(Required) The operating system of the installer."
														},
														{
															"key": "installerType",
															"value": "<string>",
															"description": "(Required) The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive."
														},
														{
															"key": "version",
															"value": "<string>",
															"description": "(Required) The required version of the OneAgent in `1.155.275.20181112-084458` format."
														}
													]
												},
												"description": "For the `paas` or `paas-sh` installer types you can get a configuring installer, by passing additional parameters."
											},
											"response": [
												{
													"name": "Not modified. You already have the latest version of the installer. The response does not contain a payload.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/version/:version?flavor=default&arch=all&bitness=all&include=All&skipMetadata=false",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"agent",
																":osType",
																":installerType",
																"version",
																":version"
															],
															"query": [
																{
																	"key": "flavor",
																	"value": "default"
																},
																{
																	"key": "arch",
																	"value": "all"
																},
																{
																	"key": "bitness",
																	"value": "all"
																},
																{
																	"key": "include",
																	"value": "All"
																},
																{
																	"key": "skipMetadata",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "osType"
																},
																{
																	"key": "installerType"
																},
																{
																	"key": "version"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The payload contains the installer file.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/agent/:osType/:installerType/version/:version?flavor=default&arch=all&bitness=all&include=All&skipMetadata=false",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"agent",
																":osType",
																":installerType",
																"version",
																":version"
															],
															"query": [
																{
																	"key": "flavor",
																	"value": "default"
																},
																{
																	"key": "arch",
																	"value": "all"
																},
																{
																	"key": "bitness",
																	"value": "all"
																},
																{
																	"key": "include",
																	"value": "All"
																},
																{
																	"key": "skipMetadata",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "osType"
																},
																{
																	"key": "installerType"
																},
																{
																	"key": "version"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Lists all available versions of OneAgent installer",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/deployment/installer/agent/versions/:osType/:installerType?flavor=default&arch=all",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"deployment",
												"installer",
												"agent",
												"versions",
												":osType",
												":installerType"
											],
											"query": [
												{
													"key": "flavor",
													"value": "default",
													"description": "The flavor of your Linux distribution. \n\n Set `musl` for Linux distributions, which are using the musl C standard library, for example Alpine Linux. \n\n Only applicable to the `paas` and `paas-sh` installer types."
												},
												{
													"key": "arch",
													"value": "all",
													"description": "The architecture of your OS: \n\n* `all`: Use this value for AIX and z/OS. Defaults to `x86` for other OS types. \n* `x86`: x86 architecture.\n* `ppc`: PowerPC architecture, only supported for AIX and Linux.\n* `ppcle`: PowerPC Little Endian architecture, only supported for Linux.\n* `sparc`: Sparc architecture, only supported for Solaris. \n\n* `arm`: ARM architecture, only supported for Linux. \n\n* `s390`: S/390 architecture, only supported for Linux. \n\nOnly applicable to the `paas` and `paas-sh` installer types."
												}
											],
											"variable": [
												{
													"key": "osType",
													"value": "<string>",
													"description": "(Required) The operating system of the installer."
												},
												{
													"key": "installerType",
													"value": "<string>",
													"description": "(Required) The type of the installer: \n\n* `default`: Self-extracting installer for manual installation. Downloads an `.exe` file for Windows or an `.sh` file for Unix. \n* `default-unattended`: Self-extracting installer for unattended installation. Windows only. Downloads a `.zip` archive, containing the `.msi` installer and the batch file. This option is deprecated with OneAgent version 1.173 \n* `paas`: Code modules installer. Downloads a `*.zip` archive, containing the `manifest.json` file with meta information or a `.jar` file for z/OS. \n* `paas-sh`: Code modules installer. Downloads a self-extracting shell script with the embedded `tar.gz` archive."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The payload contains the available versions.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/agent/versions/:osType/:installerType?flavor=default&arch=all",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"agent",
														"versions",
														":osType",
														":installerType"
													],
													"query": [
														{
															"key": "flavor",
															"value": "default"
														},
														{
															"key": "arch",
															"value": "all"
														}
													],
													"variable": [
														{
															"key": "osType"
														},
														{
															"key": "installerType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"availableVersions\": [\n  \"laboris quis cupidatat dolor\",\n  \"reprehenderit eu elit culpa\"\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "gateway",
							"item": [
								{
									"name": "{os Type}",
									"item": [
										{
											"name": "Downloads the configured standard ActiveGate installer of the latest version for the specified OS",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/gateway/:osType/latest",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"gateway",
														":osType",
														"latest"
													],
													"variable": [
														{
															"key": "osType",
															"value": "<string>",
															"description": "(Required) The operating system of the installer."
														}
													]
												}
											},
											"response": [
												{
													"name": "Not modified. You already have the latest version of the installer. The response does not contain a payload.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/gateway/:osType/latest",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"gateway",
																":osType",
																"latest"
															],
															"variable": [
																{
																	"key": "osType"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The payload contains the installer file.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/gateway/:osType/latest",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"gateway",
																":osType",
																"latest"
															],
															"variable": [
																{
																	"key": "osType"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Downloads the ActiveGate installer, compatible with the specified **OneAgent** version",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/gateway/:osType/version/:version",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"gateway",
														":osType",
														"version",
														":version"
													],
													"variable": [
														{
															"key": "osType",
															"value": "<string>",
															"description": "(Required) The operating system of the installer."
														},
														{
															"key": "version",
															"value": "<string>",
															"description": "(Required) The required version of the **OneAgent** installer, in `1.155.275.20181112-084458` format.  \n\n The request returns the ActiveGate installer of the version, compatible with the provided OneAgent version."
														}
													]
												},
												"description": " The request downloads the ActiveGate installer of the version, compatible with the provided OneAgent version. This version might be different from the specified OneAgent version."
											},
											"response": [
												{
													"name": "Success. The payload contains the installer file.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/gateway/:osType/version/:version",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"gateway",
																":osType",
																"version",
																":version"
															],
															"variable": [
																{
																	"key": "osType"
																},
																{
																	"key": "version"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not modified. You already have the latest version of the installer. The response does not contain a payload.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "The ETag of the previous request. Do not download if it matches the ETag of the installer.",
																"key": "If-None-Match",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{tenant}}/api/v1/deployment/installer/gateway/:osType/version/:version",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"deployment",
																"installer",
																"gateway",
																":osType",
																"version",
																":version"
															],
															"variable": [
																{
																	"key": "osType"
																},
																{
																	"key": "version"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Lists all available versions of ActiveGate installer | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/deployment/installer/gateway/versions/:osType",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"deployment",
												"installer",
												"gateway",
												"versions",
												":osType"
											],
											"variable": [
												{
													"key": "osType",
													"value": "<string>",
													"description": "(Required) The operating system of the installer."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The payload contains the available versions.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/gateway/versions/:osType",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"gateway",
														"versions",
														":osType"
													],
													"variable": [
														{
															"key": "osType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"availableVersions\": [\n  \"aute\",\n  \"exercitation nisi nulla sunt dolor\"\n ]\n}"
										},
										{
											"name": "Not found. See the response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/installer/gateway/versions/:osType",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"installer",
														"gateway",
														"versions",
														":osType"
													],
													"variable": [
														{
															"key": "osType"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "boshrelease",
					"item": [
						{
							"name": "agent/{os Type}/version/{version}",
							"item": [
								{
									"name": "Downloads BOSH release tarballs of the specified version, OneAgent included",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/deployment/boshrelease/agent/:osType/version/:version?skipMetadata=false",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"deployment",
												"boshrelease",
												"agent",
												":osType",
												"version",
												":version"
											],
											"query": [
												{
													"key": "skipMetadata",
													"value": "false",
													"description": "Set `true` to omit the OneAgent connectivity information from the installer. \n\n If not set, `false` is used."
												}
											],
											"variable": [
												{
													"key": "osType",
													"value": "<string>",
													"description": "(Required) The operating system of the installer."
												},
												{
													"key": "version",
													"value": "<string>",
													"description": "(Required) The required version of the OneAgent in the `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET /deployment/boshrelease/versions/{osType}**](https://www.dynatrace.com/support/help/shortlink/api-deployment-get-bosh-tarballs-versions) call."
												}
											]
										},
										"description": "For SaaS, the call is executed on an Environment ActiveGate. Be sure to use the base of an ActiveGate, **not** the environment."
									},
									"response": [
										{
											"name": "Success. The payload contains the BOSH release tarball file.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/boshrelease/agent/:osType/version/:version?skipMetadata=false",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"boshrelease",
														"agent",
														":osType",
														"version",
														":version"
													],
													"query": [
														{
															"key": "skipMetadata",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "osType"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets the checksum of the specified BOSH release tarbell",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/deployment/boshrelease/agent/:osType/version/:version/checksum?skipMetadata=false",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"deployment",
												"boshrelease",
												"agent",
												":osType",
												"version",
												":version",
												"checksum"
											],
											"query": [
												{
													"key": "skipMetadata",
													"value": "false",
													"description": "Set `true` to omit the OneAgent connectivity information from the installer. \n\n If not set, `false` is used."
												}
											],
											"variable": [
												{
													"key": "osType",
													"value": "<string>",
													"description": "(Required) The operating system of the installer."
												},
												{
													"key": "version",
													"value": "<string>",
													"description": "(Required) The required version of the OneAgent in the `1.155.275.20181112-084458` format. \n\nYou can retrieve the list of available versions with the [**GET /deployment/boshrelease/versions/{osType}**](https://www.dynatrace.com/support/help/shortlink/api-deployment-get-bosh-tarballs-versions) call."
												}
											]
										},
										"description": "The checksum is the sha256 hash of the installer file. \n\nResult is not stable if **skipMetadata** is set to `false`.\n\nFor SaaS only works on environment ActiveGates version 1.176 or higher"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/deployment/boshrelease/agent/:osType/version/:version/checksum?skipMetadata=false",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"deployment",
														"boshrelease",
														"agent",
														":osType",
														"version",
														":version",
														"checksum"
													],
													"query": [
														{
															"key": "skipMetadata",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "osType"
														},
														{
															"key": "version"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"sha256\": \"dolor anim ullamc\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Gets the list of available OneAgent versions for BOSH release tarballs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/deployment/boshrelease/versions/:osType",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"deployment",
										"boshrelease",
										"versions",
										":osType"
									],
									"variable": [
										{
											"key": "osType",
											"value": "<string>",
											"description": "(Required) The operating system of the installer."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/deployment/boshrelease/versions/:osType",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"deployment",
												"boshrelease",
												"versions",
												":osType"
											],
											"variable": [
												{
													"key": "osType"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"availableVersions\": [\n  \"nulla\",\n  \"dolor commodo dolor\"\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "anonymize/anonymization Jobs",
			"item": [
				{
					"name": "Creates user session anonymization job",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/anonymize/anonymizationJobs?startTimestamp=0&endTimestamp=0&userIds=<string>&userIds=<string>&ips=<string>&ips=<string>&additionalField=country",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"anonymize",
								"anonymizationJobs"
							],
							"query": [
								{
									"key": "startTimestamp",
									"value": "0",
									"description": "The start timestamp of the user session to anonymize, in UTC milliseconds.\n\n If not set the earliest available time is used."
								},
								{
									"key": "endTimestamp",
									"value": "0",
									"description": "The end timestamp of the user session to anonymize, in UTC milliseconds.\n\n If not set the current time is used."
								},
								{
									"key": "userIds",
									"value": "<string>",
									"description": "The UserID of the user to anonymize. \n\n You can specify several IDs, in the following format: `userIds=user1&userIds=user2`."
								},
								{
									"key": "userIds",
									"value": "<string>",
									"description": "The UserID of the user to anonymize. \n\n You can specify several IDs, in the following format: `userIds=user1&userIds=user2`."
								},
								{
									"key": "ips",
									"value": "<string>",
									"description": "The IP address of the user to anonymize. All user sessions from this IP will be anonymized. \n\nYou can specify several IPs, in the following format: `ips=ip1&ips=ip2`."
								},
								{
									"key": "ips",
									"value": "<string>",
									"description": "The IP address of the user to anonymize. All user sessions from this IP will be anonymized. \n\nYou can specify several IPs, in the following format: `ips=ip1&ips=ip2`."
								},
								{
									"key": "additionalField",
									"value": "country",
									"description": "A list of fields to be anonymized. \n\nYou can specify several fields, in the following format: `additionalField=field1&additionalField=field2`."
								}
							]
						},
						"description": "The job anonymizes all user sessions in the specified timeframe by masking the specified fields. \n\nTo identify user sessions to be anonymized you can specify either userID, or IP address, or both. If you specify both the **OR** logic applies. \n\nYou can't undo the anonymization."
					},
					"response": [
						{
							"name": "Success. The response body contains the ID of the anonymization job. You can use the ID to check the job status.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/anonymize/anonymizationJobs?startTimestamp=0&endTimestamp=0&userIds=<string>&userIds=<string>&ips=<string>&ips=<string>&additionalField=userId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"anonymize",
										"anonymizationJobs"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "0"
										},
										{
											"key": "endTimestamp",
											"value": "0"
										},
										{
											"key": "userIds",
											"value": "<string>"
										},
										{
											"key": "userIds",
											"value": "<string>"
										},
										{
											"key": "ips",
											"value": "<string>"
										},
										{
											"key": "ips",
											"value": "<string>"
										},
										{
											"key": "additionalField",
											"value": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"requestId\": \"-4013759873546847071\"\n}"
						},
						{
							"name": "Failed. The input is invalid. See the response body for details.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/anonymize/anonymizationJobs?startTimestamp=0&endTimestamp=0&userIds=<string>&userIds=<string>&ips=<string>&ips=<string>&additionalField=userId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"anonymize",
										"anonymizationJobs"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "0"
										},
										{
											"key": "endTimestamp",
											"value": "0"
										},
										{
											"key": "userIds",
											"value": "<string>"
										},
										{
											"key": "userIds",
											"value": "<string>"
										},
										{
											"key": "ips",
											"value": "<string>"
										},
										{
											"key": "ips",
											"value": "<string>"
										},
										{
											"key": "additionalField",
											"value": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Shows the progress of the specified anonymization job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/anonymize/anonymizationJobs/:requestId",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"anonymize",
								"anonymizationJobs",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "<string>",
									"description": "(Required) The ID of the required anonymization job."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response body contains the status of the anonymization job.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/anonymize/anonymizationJobs/:requestId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"anonymize",
										"anonymizationJobs",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"progress\": 50\n}"
						},
						{
							"name": "Failed. The input is invalid. See the response body for details.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/anonymize/anonymizationJobs/:requestId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"anonymize",
										"anonymizationJobs",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user Session Query Language",
			"item": [
				{
					"name": "Returns the result of the query as a table structure",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/table?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&pageSize=<integer>&pageOffset=<integer>&addDeepLinkFields=false&explain=false",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"userSessionQueryLanguage",
								"table"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The user session query to be executed. See the [USQL help page](https://www.dynatrace.com/support/help/shortlink/usql-info) for syntax details. \n\n You can find the available columns of the **usersession** table in the `UserSession` object. \n\n Here is an example of the query: `SELECT country, city, COUNT(*) FROM usersession GROUP BY country, city`."
								},
								{
									"key": "startTimestamp",
									"value": "<long>",
									"description": "The start timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, 2 hours behind the current time is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter)."
								},
								{
									"key": "endTimestamp",
									"value": "<long>",
									"description": "The end timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, the current timestamp is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter)."
								},
								{
									"key": "offsetUTC",
									"value": "<integer>",
									"description": "Optional offset of local time to UTC time in minutes. Offset will be applied to Date fields encountered in the query. \n\nCan be positive or negative. E.g. if the local time is UTC+02:00, the timeOffset is 120. If it is UTC-05:00, timeOffset is -300."
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "Optional limit on how many of the actual query results should be returned in the tabular result."
								},
								{
									"key": "pageOffset",
									"value": "<integer>",
									"description": "Optional offset of the requested results from the start of tabular results. Relates to pageSize. \n\nE.g. on a query that might return 500 results, you might want to receive results in chunks of 50 rows. \n\nthis can be achieved by using pageSize=50, and setting pageOffset in subsequent calls.In the example adding pageOffset=50 returns result rows 51-100."
								},
								{
									"key": "addDeepLinkFields",
									"value": "false",
									"description": "Add (`true`) to enable deep linking of additional fields in the query. \n\nIf not set, then `false` is used"
								},
								{
									"key": "explain",
									"value": "false",
									"description": "Add (`true`) or don't add (`false`) some additional information about the result to the response. \n\nIt helps to understand the query and how the result was calculated. \n\nIf not set, then `false` is used"
								}
							]
						},
						"description": "The result is a flat list of rows containing the requested columns."
					},
					"response": [
						{
							"name": "Success. The response contains the result of the query.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/table?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&pageSize=<integer>&pageOffset=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"table"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "pageOffset",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"extrapolationLevel\": 1,\n \"additionalColumnNames\": [\n  \"qui\",\n  \"reprehenderit sunt proident\"\n ],\n \"additionalValues\": [\n  [\n   \"reprehenderit\",\n   \"incididunt quis\"\n  ],\n  [\n   \"nostrud\",\n   \"cupidatat ullamco\"\n  ]\n ],\n \"explanations\": [\n  \"ut reprehenderit\",\n  \"non deserunt\"\n ],\n \"columnNames\": [\n  \"ea pariatur qui\",\n  \"id\"\n ],\n \"values\": [\n  [\n   \"fugiat sit dolor laboris magna\",\n   \"ull\"\n  ],\n  [\n   \"eiusmod\",\n   \"cillum irure\"\n  ]\n ]\n}"
						},
						{
							"name": "The data structure of the user session. This response code is never returned.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/table?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&pageSize=<integer>&pageOffset=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"table"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "pageOffset",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"code": 999,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"tenantId\": \"azy123456\",\n \"userSessionId\": \"sunt dolore\",\n \"startTime\": 1511363122754,\n \"endTime\": 1511363122754,\n \"duration\": 122300,\n \"internalUserId\": \"adipisicing la\",\n \"userType\": \"REAL_USER\",\n \"applicationType\": \"CUSTOM_APPLICATION\",\n \"bounce\": true,\n \"newUser\": true,\n \"userActionCount\": 52511865,\n \"totalErrorCount\": 4798124,\n \"totalLicenseCreditCount\": -91636511,\n \"matchingConversionGoalsCount\": 3283124,\n \"matchingConversionGoals\": [\n  \"adipisicing ea sed\",\n  \"magna \"\n ],\n \"ip\": \"Lorem anim ad nostrud\",\n \"continent\": \"ipsum culpa adipisicing occaecat\",\n \"country\": \"aliquip Duis ut eu\",\n \"region\": \"aliquip sit laborum in\",\n \"city\": \"laboris deserunt\",\n \"browserType\": \"Mobile Browser, Desktop Browser\",\n \"browserFamily\": \"Firefox, Chrome, IE\",\n \"browserMajorVersion\": \"Firefox 57, Chrome 60\",\n \"osFamily\": \"Windows, Linux\",\n \"osVersion\": \"iOS 9, Windows 10\",\n \"manufacturer\": \"Samsung, Apple\",\n \"device\": \"Samsung S5, Apple iPhone X\",\n \"userId\": \"user@example.org\",\n \"screenHeight\": 768,\n \"screenWidth\": 1024,\n \"screenOrientation\": \"LANDSCAPE\",\n \"displayResolution\": \"SVGA\",\n \"hasCrash\": false,\n \"hasSessionReplay\": true,\n \"isp\": \"elit commodo laborum adipisicing voluptate\",\n \"clientType\": \" Desktop Browser, Mobile App, Mobile Browser, Robot, Synthetic Agent, Tablet Browser\",\n \"browserMonitorId\": \"consectetur dolor\",\n \"browserMonitorName\": \"Ut\",\n \"stringProperties\": [\n  {\n   \"key\": \"eu tempor velit\",\n   \"value\": \"ut\"\n  },\n  {\n   \"key\": \"non\",\n   \"value\": \"aliquip Duis commodo\"\n  }\n ],\n \"longProperties\": [\n  {\n   \"key\": \"in non occaecat\",\n   \"value\": -67797523\n  },\n  {\n   \"key\": \"cillum qui velit exercitation\",\n   \"value\": 80968775\n  }\n ],\n \"doubleProperties\": [\n  {\n   \"key\": \"in magna ex et\",\n   \"value\": 77516149.21449485\n  },\n  {\n   \"key\": \"laboris\",\n   \"value\": -80076185.2274949\n  }\n ],\n \"dateProperties\": [\n  {\n   \"key\": \"sunt elit\",\n   \"value\": \"et elit dolore\"\n  },\n  {\n   \"key\": \"id consequat mollit\",\n   \"value\": \"dolo\"\n  }\n ],\n \"userActions\": [\n  {\n   \"name\": \"Loading of page /index.html\",\n   \"domain\": \"ipsum cupidatat id esse\",\n   \"targetUrl\": \"consequa\",\n   \"type\": \"Load\",\n   \"startTime\": 1511363122754,\n   \"endTime\": 1511363122754,\n   \"duration\": 122300,\n   \"application\": \"aliquip nulla se\",\n   \"internalApplicationId\": \"pariatur magna elit ut\",\n   \"internalKeyUserActionId\": \"ea ex irure fugiat deserunt\",\n   \"speedIndex\": 122300,\n   \"errorCount\": 90073351,\n   \"apdexCategory\": \"SATISFIED\",\n   \"matchingConversionGoals\": [\n    \"adipisicing velit quis\",\n    \"no\"\n   ],\n   \"networkTime\": 122300,\n   \"serverTime\": 122300,\n   \"frontendTime\": 122300,\n   \"documentInteractiveTime\": 122300,\n   \"failedImages\": -10691708,\n   \"failedXhrRequests\": 53622068,\n   \"httpRequestsWithErrors\": -3998543,\n   \"thirdPartyResources\": 3422057,\n   \"thirdPartyBusyTime\": 122300,\n   \"cdnResources\": 72030934,\n   \"cdnBusyTime\": 122300,\n   \"firstPartyResources\": 62928373,\n   \"firstPartyBusyTime\": 122300,\n   \"hasCrash\": false,\n   \"domCompleteTime\": 122300,\n   \"domContentLoadedTime\": 122300,\n   \"loadEventStart\": 122300,\n   \"loadEventEnd\": 122300,\n   \"navigationStart\": 122300,\n   \"requestStart\": 122300,\n   \"responseStart\": 122300,\n   \"responseEnd\": 122300,\n   \"visuallyCompleteTime\": 122300,\n   \"syntheticEvent\": \"consectetur\",\n   \"syntheticEventId\": \"esse reprehe\",\n   \"keyUserAction\": true,\n   \"stringProperties\": [\n    {\n     \"key\": \"veniam in eu eiusmod\",\n     \"value\": \"id esse minim\"\n    },\n    {\n     \"key\": \"culpa in ips\",\n     \"value\": \"cupidatat dolor deserunt proident aliquip\"\n    }\n   ],\n   \"longProperties\": [\n    {\n     \"key\": \"nisi amet\",\n     \"value\": 20474528\n    },\n    {\n     \"key\": \"nostrud \",\n     \"value\": 21143411\n    }\n   ],\n   \"doubleProperties\": [\n    {\n     \"key\": \"deserunt culpa\",\n     \"value\": -26679117.296614274\n    },\n    {\n     \"key\": \"ad\",\n     \"value\": -24332154.625466406\n    }\n   ],\n   \"dateProperties\": [\n    {\n     \"key\": \"minim aliqua officia ullamco tempor\",\n     \"value\": \"qui deserunt laborum exercitation\"\n    },\n    {\n     \"key\": \"laborum ad dolore\",\n     \"value\": \"amet ullamco mollit sed\"\n    }\n   ],\n   \"userActionPropertyCount\": -19577537,\n   \"customErrorCount\": -85131563,\n   \"javascriptErrorCount\": 60792899,\n   \"requestErrorCount\": -23538935\n  },\n  {\n   \"name\": \"Loading of page /index.html\",\n   \"domain\": \"ipsum adipisicing voluptate pariatur\",\n   \"targetUrl\": \"Excepteur ullamco aute\",\n   \"type\": \"Load\",\n   \"startTime\": 1511363122754,\n   \"endTime\": 1511363122754,\n   \"duration\": 122300,\n   \"application\": \"adipisicing officia in est irure\",\n   \"internalApplicationId\": \"Excepteur cupidata\",\n   \"internalKeyUserActionId\": \"in ipsum in pariatur\",\n   \"speedIndex\": 122300,\n   \"errorCount\": -86823209,\n   \"apdexCategory\": \"SATISFIED\",\n   \"matchingConversionGoals\": [\n    \"culpa sunt elit\",\n    \"ut incididunt\"\n   ],\n   \"networkTime\": 122300,\n   \"serverTime\": 122300,\n   \"frontendTime\": 122300,\n   \"documentInteractiveTime\": 122300,\n   \"failedImages\": 29737857,\n   \"failedXhrRequests\": -39072964,\n   \"httpRequestsWithErrors\": -74288193,\n   \"thirdPartyResources\": 83509092,\n   \"thirdPartyBusyTime\": 122300,\n   \"cdnResources\": 48629714,\n   \"cdnBusyTime\": 122300,\n   \"firstPartyResources\": -46106520,\n   \"firstPartyBusyTime\": 122300,\n   \"hasCrash\": false,\n   \"domCompleteTime\": 122300,\n   \"domContentLoadedTime\": 122300,\n   \"loadEventStart\": 122300,\n   \"loadEventEnd\": 122300,\n   \"navigationStart\": 122300,\n   \"requestStart\": 122300,\n   \"responseStart\": 122300,\n   \"responseEnd\": 122300,\n   \"visuallyCompleteTime\": 122300,\n   \"syntheticEvent\": \"Excepteur eiusmod ut non qui\",\n   \"syntheticEventId\": \"magna ul\",\n   \"keyUserAction\": false,\n   \"stringProperties\": [\n    {\n     \"key\": \"pariatur\",\n     \"value\": \"anim consectetur aliquip eu fugiat\"\n    },\n    {\n     \"key\": \"do dolor\",\n     \"value\": \"ad Duis enim\"\n    }\n   ],\n   \"longProperties\": [\n    {\n     \"key\": \"magna labore\",\n     \"value\": 70289097\n    },\n    {\n     \"key\": \"exercitation\",\n     \"value\": -91017886\n    }\n   ],\n   \"doubleProperties\": [\n    {\n     \"key\": \"proident tempor cupidatat\",\n     \"value\": -85277607.6070525\n    },\n    {\n     \"key\": \"enim proident\",\n     \"value\": 79498429.83199641\n    }\n   ],\n   \"dateProperties\": [\n    {\n     \"key\": \"est labore sint exercitation\",\n     \"value\": \"adipisicing\"\n    },\n    {\n     \"key\": \"mollit ad\",\n     \"value\": \"laboris ipsum\"\n    }\n   ],\n   \"userActionPropertyCount\": 83798152,\n   \"customErrorCount\": 7448581,\n   \"javascriptErrorCount\": 97170187,\n   \"requestErrorCount\": 62244095\n  }\n ],\n \"events\": [\n  {\n   \"type\": \"Error\",\n   \"name\": \"ullamco est do cupidatat\",\n   \"domain\": \"dolor esse Duis aliquip\",\n   \"startTime\": 1511363122754,\n   \"application\": \"ut laboris cillum esse\",\n   \"internalApplicationId\": \"enim incididunt ullamco\",\n   \"metadata\": \"key1:value1;key2:value2\"\n  },\n  {\n   \"type\": \"Behavioral\",\n   \"name\": \"sed pariatur incididunt quis\",\n   \"domain\": \"do amet sed et\",\n   \"startTime\": 1511363122754,\n   \"application\": \"reprehenderit\",\n   \"internalApplicationId\": \"amet\",\n   \"metadata\": \"key1:value1;key2:value2\"\n  }\n ],\n \"errors\": [\n  {\n   \"type\": \"UserTagFromMetaData\",\n   \"name\": \"cupidatat cillum\",\n   \"domain\": \"consectetur eu ut culpa\",\n   \"startTime\": 1511363122754,\n   \"application\": \"occaecat veniam Ut nostrud\",\n   \"internalApplicationId\": \"ad\"\n  },\n  {\n   \"type\": \"UserTagFromMetaData\",\n   \"name\": \"eu pariatur elit\",\n   \"domain\": \"voluptate ad anim et tempor\",\n   \"startTime\": 1511363122754,\n   \"application\": \"culpa Lorem cillum offic\",\n   \"internalApplicationId\": \"aliquip Excepteur adipisicing sunt\"\n  }\n ],\n \"syntheticEvents\": [\n  {\n   \"name\": \"anim\",\n   \"syntheticEventId\": \"mollit in ipsum\",\n   \"sequenceNumber\": -39819854,\n   \"timestamp\": 9594581,\n   \"type\": \"fugiat Excepteur labore ut dolor\",\n   \"errorCode\": 82324132,\n   \"errorName\": \"officia eu\"\n  },\n  {\n   \"name\": \"Duis exercitation\",\n   \"syntheticEventId\": \"ipsum sit esse\",\n   \"sequenceNumber\": 44088941,\n   \"timestamp\": -10759675,\n   \"type\": \"anim ex do sit nisi\",\n   \"errorCode\": -79328942,\n   \"errorName\": \"anim ad consectetur\"\n  }\n ],\n \"appVersion\": \"velit adipisicing quis dolore Ut\",\n \"endReason\": \"DURATION_LIMIT\",\n \"numberOfRageClicks\": -51743137,\n \"userExperienceScore\": \"TOLERATED\",\n \"carrier\": \"sint quis officia nulla\",\n \"networkTechnology\": \"quis incididunt nulla\",\n \"connectionType\": \"WIFI\",\n \"replayStart\": -25120093,\n \"replayEnd\": 12531877,\n \"clientTimeOffset\": -85903533\n}"
						},
						{
							"name": "Failed. The query is invalid. See the response body for more information.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/table?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&pageSize=<integer>&pageOffset=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"table"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "pageOffset",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The query is missing.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/table?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&pageSize=<integer>&pageOffset=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"table"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "pageOffset",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the result of the query as a tree structure",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/tree?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&addDeepLinkFields=false&explain=false",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"userSessionQueryLanguage",
								"tree"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) The user session query to be executed. See the [USQL help page](https://www.dynatrace.com/support/help/shortlink/usql-info) for syntax details. \n\n You can find the available columns of the **usersession** table in the `UserSession` object. \n\n Here is an example of the query: `SELECT country, city, COUNT(*) FROM usersession GROUP BY country, city`."
								},
								{
									"key": "startTimestamp",
									"value": "<long>",
									"description": "The start timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, 2 hours behind the current time is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter)."
								},
								{
									"key": "endTimestamp",
									"value": "<long>",
									"description": "The end timestamp of the query, in UTC milliseconds. \n\nIf not set or set as `0`, the current timestamp is used.\n\n If the exact times are important, set the timeframe in the query itself (**query** parameter)."
								},
								{
									"key": "offsetUTC",
									"value": "<integer>",
									"description": "Optional offset of local time to UTC time in minutes. Offset will be applied to Date fields encountered in the query. \n\nCan be positive or negative. E.g. if the local time is UTC+02:00, the timeOffset is 120. If it is UTC-05:00, timeOffset is -300."
								},
								{
									"key": "addDeepLinkFields",
									"value": "false",
									"description": "Add (`true`) to enable deep linking of additional fields in the query. \n\nIf not set, then `false` is used"
								},
								{
									"key": "explain",
									"value": "false",
									"description": "Add (`true`) or don't add (`false`) some additional information about the result to the response. \n\nIt helps to understand the query and how the result was calculated. \n\nIf not set, then `false` is used"
								}
							]
						},
						"description": "To get a proper tree structure, you need to specify grouping in the query."
					},
					"response": [
						{
							"name": "Failed. The query is invalid. See the response body for more information.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/tree?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"tree"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The data structure of the user session. This response code is never returned.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/tree?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"tree"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"code": 999,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"tenantId\": \"azy123456\",\n \"userSessionId\": \"non id\",\n \"startTime\": 1511363122754,\n \"endTime\": 1511363122754,\n \"duration\": 122300,\n \"internalUserId\": \"qui cupidatat culpa\",\n \"userType\": \"SYNTHETIC\",\n \"applicationType\": \"CUSTOM_APPLICATION\",\n \"bounce\": false,\n \"newUser\": false,\n \"userActionCount\": 75156346,\n \"totalErrorCount\": 35036449,\n \"totalLicenseCreditCount\": 2255329,\n \"matchingConversionGoalsCount\": -44023927,\n \"matchingConversionGoals\": [\n  \"ex ipsum\",\n  \"minim anim id\"\n ],\n \"ip\": \"Excepteur deserunt temp\",\n \"continent\": \"Lorem do\",\n \"country\": \"qui ut voluptate\",\n \"region\": \"laborum sed aliqua ut elit\",\n \"city\": \"culpa ut Excepteur cupidatat reprehenderit\",\n \"browserType\": \"Mobile Browser, Desktop Browser\",\n \"browserFamily\": \"Firefox, Chrome, IE\",\n \"browserMajorVersion\": \"Firefox 57, Chrome 60\",\n \"osFamily\": \"Windows, Linux\",\n \"osVersion\": \"iOS 9, Windows 10\",\n \"manufacturer\": \"Samsung, Apple\",\n \"device\": \"Samsung S5, Apple iPhone X\",\n \"userId\": \"user@example.org\",\n \"screenHeight\": 768,\n \"screenWidth\": 1024,\n \"screenOrientation\": \"LANDSCAPE\",\n \"displayResolution\": \"WQVGA\",\n \"hasCrash\": true,\n \"hasSessionReplay\": true,\n \"isp\": \"ipsum\",\n \"clientType\": \" Desktop Browser, Mobile App, Mobile Browser, Robot, Synthetic Agent, Tablet Browser\",\n \"browserMonitorId\": \"in anim proident temp\",\n \"browserMonitorName\": \"officia deserunt\",\n \"stringProperties\": [\n  {\n   \"key\": \"cupidatat proident labore \",\n   \"value\": \"adipisicing\"\n  },\n  {\n   \"key\": \"et fugiat\",\n   \"value\": \"sint sed nulla in voluptat\"\n  }\n ],\n \"longProperties\": [\n  {\n   \"key\": \"id in reprehenderit dolore sed\",\n   \"value\": 37815223\n  },\n  {\n   \"key\": \"consectetur aute non anim\",\n   \"value\": -72442267\n  }\n ],\n \"doubleProperties\": [\n  {\n   \"key\": \"elit in dolor\",\n   \"value\": -10160652.244305223\n  },\n  {\n   \"key\": \"in commodo ullamco pariatur Duis\",\n   \"value\": -45027911.90925746\n  }\n ],\n \"dateProperties\": [\n  {\n   \"key\": \"nisi\",\n   \"value\": \"aute elit ut in\"\n  },\n  {\n   \"key\": \"Duis qui sed\",\n   \"value\": \"irure occaecat\"\n  }\n ],\n \"userActions\": [\n  {\n   \"name\": \"Loading of page /index.html\",\n   \"domain\": \"laborum ex Ut dolore\",\n   \"targetUrl\": \"sunt consectetur\",\n   \"type\": \"Load\",\n   \"startTime\": 1511363122754,\n   \"endTime\": 1511363122754,\n   \"duration\": 122300,\n   \"application\": \"nisi esse irure\",\n   \"internalApplicationId\": \"ut exercitation veniam eu\",\n   \"internalKeyUserActionId\": \"sunt fugiat enim est\",\n   \"speedIndex\": 122300,\n   \"errorCount\": 60141571,\n   \"apdexCategory\": \"SATISFIED\",\n   \"matchingConversionGoals\": [\n    \"ut\",\n    \"eu pariatur\"\n   ],\n   \"networkTime\": 122300,\n   \"serverTime\": 122300,\n   \"frontendTime\": 122300,\n   \"documentInteractiveTime\": 122300,\n   \"failedImages\": 12264290,\n   \"failedXhrRequests\": 13188169,\n   \"httpRequestsWithErrors\": 14391054,\n   \"thirdPartyResources\": -58293649,\n   \"thirdPartyBusyTime\": 122300,\n   \"cdnResources\": 40970815,\n   \"cdnBusyTime\": 122300,\n   \"firstPartyResources\": -34330408,\n   \"firstPartyBusyTime\": 122300,\n   \"hasCrash\": true,\n   \"domCompleteTime\": 122300,\n   \"domContentLoadedTime\": 122300,\n   \"loadEventStart\": 122300,\n   \"loadEventEnd\": 122300,\n   \"navigationStart\": 122300,\n   \"requestStart\": 122300,\n   \"responseStart\": 122300,\n   \"responseEnd\": 122300,\n   \"visuallyCompleteTime\": 122300,\n   \"syntheticEvent\": \"id do esse ani\",\n   \"syntheticEventId\": \"consectetur tempor aliqua\",\n   \"keyUserAction\": false,\n   \"stringProperties\": [\n    {\n     \"key\": \"in sint adipisicing dolor\",\n     \"value\": \"al\"\n    },\n    {\n     \"key\": \"in culpa in fugiat\",\n     \"value\": \"irure cupidatat quis\"\n    }\n   ],\n   \"longProperties\": [\n    {\n     \"key\": \"culpa dolore amet voluptate\",\n     \"value\": 85133477\n    },\n    {\n     \"key\": \"consectetur in ea ullamco\",\n     \"value\": 9959921\n    }\n   ],\n   \"doubleProperties\": [\n    {\n     \"key\": \"veniam enim dolore dolor\",\n     \"value\": -96561078.62761605\n    },\n    {\n     \"key\": \"commodo quis\",\n     \"value\": -12137288.320643827\n    }\n   ],\n   \"dateProperties\": [\n    {\n     \"key\": \"irure amet qui reprehenderit\",\n     \"value\": \"elit incididunt laborum in consectetur\"\n    },\n    {\n     \"key\": \"occaecat\",\n     \"value\": \"sit occaecat fugiat cillum\"\n    }\n   ],\n   \"userActionPropertyCount\": -30532999,\n   \"customErrorCount\": 40276400,\n   \"javascriptErrorCount\": 12778100,\n   \"requestErrorCount\": 54168767\n  },\n  {\n   \"name\": \"Loading of page /index.html\",\n   \"domain\": \"culpa\",\n   \"targetUrl\": \"ad elit deserunt\",\n   \"type\": \"Load\",\n   \"startTime\": 1511363122754,\n   \"endTime\": 1511363122754,\n   \"duration\": 122300,\n   \"application\": \"enim laborum ea tempor aliquip\",\n   \"internalApplicationId\": \"voluptate\",\n   \"internalKeyUserActionId\": \"anim Ut commodo\",\n   \"speedIndex\": 122300,\n   \"errorCount\": 385627,\n   \"apdexCategory\": \"SATISFIED\",\n   \"matchingConversionGoals\": [\n    \"aliquip Ut irure\",\n    \"consectetur veniam nostrud amet consequat\"\n   ],\n   \"networkTime\": 122300,\n   \"serverTime\": 122300,\n   \"frontendTime\": 122300,\n   \"documentInteractiveTime\": 122300,\n   \"failedImages\": 9836982,\n   \"failedXhrRequests\": -40604482,\n   \"httpRequestsWithErrors\": 18340045,\n   \"thirdPartyResources\": -63246217,\n   \"thirdPartyBusyTime\": 122300,\n   \"cdnResources\": 79200089,\n   \"cdnBusyTime\": 122300,\n   \"firstPartyResources\": 35724816,\n   \"firstPartyBusyTime\": 122300,\n   \"hasCrash\": true,\n   \"domCompleteTime\": 122300,\n   \"domContentLoadedTime\": 122300,\n   \"loadEventStart\": 122300,\n   \"loadEventEnd\": 122300,\n   \"navigationStart\": 122300,\n   \"requestStart\": 122300,\n   \"responseStart\": 122300,\n   \"responseEnd\": 122300,\n   \"visuallyCompleteTime\": 122300,\n   \"syntheticEvent\": \"veniam irure dolore tempor\",\n   \"syntheticEventId\": \"Duis sint nostrud\",\n   \"keyUserAction\": false,\n   \"stringProperties\": [\n    {\n     \"key\": \"in magna non\",\n     \"value\": \"consequat ut commodo mollit\"\n    },\n    {\n     \"key\": \"Excepteur pariatur\",\n     \"value\": \"Ut adipisicing aliquip\"\n    }\n   ],\n   \"longProperties\": [\n    {\n     \"key\": \"Lorem quis est\",\n     \"value\": 26244687\n    },\n    {\n     \"key\": \"Lorem eu reprehenderit in do\",\n     \"value\": 22257563\n    }\n   ],\n   \"doubleProperties\": [\n    {\n     \"key\": \"sit\",\n     \"value\": 41977012.176029146\n    },\n    {\n     \"key\": \"laboris id sed\",\n     \"value\": -7819479.720919624\n    }\n   ],\n   \"dateProperties\": [\n    {\n     \"key\": \"adipisicing cillum amet\",\n     \"value\": \"culpa elit\"\n    },\n    {\n     \"key\": \"anim elit aute Excepteur\",\n     \"value\": \"magna sunt deserunt anim\"\n    }\n   ],\n   \"userActionPropertyCount\": 18903571,\n   \"customErrorCount\": 41096080,\n   \"javascriptErrorCount\": -33597172,\n   \"requestErrorCount\": -32664401\n  }\n ],\n \"events\": [\n  {\n   \"type\": \"UserTag\",\n   \"name\": \"ad reprehenderit e\",\n   \"domain\": \"ei\",\n   \"startTime\": 1511363122754,\n   \"application\": \"Duis quis sed reprehenderit\",\n   \"internalApplicationId\": \"exercitation fugiat\",\n   \"metadata\": \"key1:value1;key2:value2\"\n  },\n  {\n   \"type\": \"Error\",\n   \"name\": \"nisi\",\n   \"domain\": \"culpa enim deserunt\",\n   \"startTime\": 1511363122754,\n   \"application\": \"laborum commodo\",\n   \"internalApplicationId\": \"incididunt id ut\",\n   \"metadata\": \"key1:value1;key2:value2\"\n  }\n ],\n \"errors\": [\n  {\n   \"type\": \"RageClick\",\n   \"name\": \"velit mollit dolor nulla\",\n   \"domain\": \"Excepteur\",\n   \"startTime\": 1511363122754,\n   \"application\": \"Lorem\",\n   \"internalApplicationId\": \"laboris labore sed pariatur\"\n  },\n  {\n   \"type\": \"Crash\",\n   \"name\": \"reprehenderit voluptate in\",\n   \"domain\": \"est laboris reprehenderit in\",\n   \"startTime\": 1511363122754,\n   \"application\": \"est ex\",\n   \"internalApplicationId\": \"proident ex aliquip cillum\"\n  }\n ],\n \"syntheticEvents\": [\n  {\n   \"name\": \"ex deserunt adipisicing qui\",\n   \"syntheticEventId\": \"in Lorem amet ea\",\n   \"sequenceNumber\": 70881839,\n   \"timestamp\": -92077984,\n   \"type\": \"consectetur mollit id\",\n   \"errorCode\": -38323918,\n   \"errorName\": \"esse est\"\n  },\n  {\n   \"name\": \"laboris eiusmod\",\n   \"syntheticEventId\": \"incididunt ullamco pariatur\",\n   \"sequenceNumber\": 41363145,\n   \"timestamp\": 37954681,\n   \"type\": \"nulla proident\",\n   \"errorCode\": 82711236,\n   \"errorName\": \"ad esse\"\n  }\n ],\n \"appVersion\": \"commodo\",\n \"endReason\": \"END_EVENT\",\n \"numberOfRageClicks\": 3022981,\n \"userExperienceScore\": \"UNDEFINED\",\n \"carrier\": \"sed Ut\",\n \"networkTechnology\": \"quis\",\n \"connectionType\": \"OFFLINE\",\n \"replayStart\": -48553680,\n \"replayEnd\": -3119883,\n \"clientTimeOffset\": 97805122\n}"
						},
						{
							"name": "Success. The response contains the result of the query.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/tree?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"tree"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"extrapolationLevel\": 1,\n \"additionalColumnNames\": [\n  \"Lorem labore\",\n  \"voluptate ex\"\n ],\n \"additionalValues\": [\n  [\n   \"laborum sunt Excepteur\",\n   \"cill\"\n  ],\n  [\n   \"consectetur\",\n   \"dolore sint\"\n  ]\n ],\n \"explanations\": [\n  \"ea esse\",\n  \"do proident aliquip\"\n ],\n \"branchNames\": [\n  \"velit magna veniam labore ex\",\n  \"laboris in\"\n ],\n \"leafNames\": [\n  \"aliquip in\",\n  \"incididunt id Ut\"\n ],\n \"values\": \"sed do\"\n}"
						},
						{
							"name": "Failed. The query is missing.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/userSessionQueryLanguage/tree?query=<string>&startTimestamp=<long>&endTimestamp=<long>&offsetUTC=<integer>&addDeepLinkFields=false&explain=false",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"userSessionQueryLanguage",
										"tree"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "offsetUTC",
											"value": "<integer>"
										},
										{
											"key": "addDeepLinkFields",
											"value": "false"
										},
										{
											"key": "explain",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "events",
			"item": [
				{
					"name": "Lists all the events of your environment, along with their parameters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/events?from=<long>&to=<long>&relativeTime=<string>&eventType=<string>&entityId=<string>&cursor=<string>",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "from",
									"value": "<long>",
									"description": "Start timestamp of the query, in UTC milliseconds. \n\n If not set, 30 days ago from now is used, unless **relativeTime** is set."
								},
								{
									"key": "to",
									"value": "<long>",
									"description": "End timestamp of the query, in UTC milliseconds. \n\n If not set, the current timestamp is used, unless **relativeTime** is set. \n\nThe timeframe must not exceed 2 years."
								},
								{
									"key": "relativeTime",
									"value": "<string>",
									"description": "Relative timeframe, back from the current time."
								},
								{
									"key": "eventType",
									"value": "<string>",
									"description": "Filters the resulting set of events by the event type."
								},
								{
									"key": "entityId",
									"value": "<string>",
									"description": "Filters the resulting set of events to the events, related to the specified Dynatrace entity."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "The response is limited to 150 events, so if you want to receive more you can use the cursor to get the next 150. This parameter should be empty when querying for the first time.  \n\nThe cursor key can then be found in the **nextCursor** field of the previous response. \n\nWhen using the cursor string, it is not necessary to specify the additional parameters, as that info is already encoded within the cursor."
								}
							]
						},
						"description": "Because the possible number of events can be huge, the response is limited to 150 events. You can focus the output by specifying filtering parameters for the request.\n\nAn event is included in the response, if either start or end timestamp of the event is within the defined timeframe."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/events?from=<long>&to=<long>&relativeTime=<string>&eventType=<string>&entityId=<string>&cursor=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "from",
											"value": "<long>"
										},
										{
											"key": "to",
											"value": "<long>"
										},
										{
											"key": "relativeTime",
											"value": "<string>"
										},
										{
											"key": "eventType",
											"value": "<string>"
										},
										{
											"key": "entityId",
											"value": "<string>"
										},
										{
											"key": "cursor",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextEventStartTms\": 1521042929000,\n \"nextEventId\": 3019761712620558300,\n \"nextCursor\": \"AgEBAAFn5IIFrgEAAAFofwDTrgAAAQAcMTY4N2RhYzViZTAtZmUxODEwOWQ5YTA1MTIyNQ%3D%3D\",\n \"from\": 1521042929000,\n \"to\": 1521542929000,\n \"totalEventCount\": 2,\n \"events\": [\n  {\n   \"startTime\": 1521042929000,\n   \"endTime\": 1521542929000,\n   \"entityId\": \"HOST-0000000000000007\",\n   \"entityName\": \"Example Host\",\n   \"severityLevel\": \"PERFORMANCE\",\n   \"impactLevel\": \"INFRASTRUCTURE\",\n   \"eventType\": \"SLOW_DISK\",\n   \"eventStatus\": \"OPEN\",\n   \"tags\": [\n    {\n     \"context\": \"CONTEXTLESS\",\n     \"key\": \"exampleTag\"\n    }\n   ],\n   \"source\": \"builtin\"\n  },\n  {\n   \"startTime\": 1521042929000,\n   \"endTime\": 1521542929000,\n   \"entityId\": \"HOST-0000000000000007\",\n   \"entityName\": \"Example Host\",\n   \"severityLevel\": \"PERFORMANCE\",\n   \"impactLevel\": \"INFRASTRUCTURE\",\n   \"eventType\": \"SLOW_DISK\",\n   \"eventStatus\": \"OPEN\",\n   \"tags\": [\n    {\n     \"context\": \"CONTEXTLESS\",\n     \"key\": \"exampleTag\"\n    }\n   ],\n   \"source\": \"builtin\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Pushes custom events to one or more monitored entities",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventType\": \"<string>\",\n    \"source\": \"<string>\",\n    \"start\": \"<long>\",\n    \"end\": \"<long>\",\n    \"timeoutMinutes\": \"<integer>\",\n    \"attachRules\": {\n        \"entityIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"tagRule\": [\n            {\n                \"meTypes\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"tags\": [\n                    {\n                        \"context\": \"GOOGLE_CLOUD\",\n                        \"key\": \"labo\",\n                        \"value\": \"proi\"\n                    },\n                    {\n                        \"context\": \"ENVIRONMENT\",\n                        \"key\": \"non \",\n                        \"value\": \"dolo\"\n                    }\n                ]\n            },\n            {\n                \"meTypes\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"tags\": [\n                    {\n                        \"context\": \"KUBERNETES\",\n                        \"key\": \"exer\",\n                        \"value\": \"labo\"\n                    },\n                    {\n                        \"context\": \"CLOUD_FOUNDRY\",\n                        \"key\": \"adip\",\n                        \"value\": \"ipsu\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"customProperties\": \"<object>\",\n    \"annotationType\": \"<string>\",\n    \"annotationDescription\": \"<string>\",\n    \"description\": \"<string>\",\n    \"deploymentName\": \"<string>\",\n    \"deploymentVersion\": \"<string>\",\n    \"timeseriesIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"deploymentProject\": \"<string>\",\n    \"ciBackLink\": \"<string>\",\n    \"remediationAction\": \"<string>\",\n    \"original\": \"<string>\",\n    \"changed\": \"<string>\",\n    \"configuration\": \"<string>\",\n    \"title\": \"<string>\",\n    \"allowDavisMerge\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{tenant}}/api/v1/events",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							]
						},
						"description": "You can use this endpoint to: \n\n* Push information-only events from third-party systems such as CI platforms (Jenkins, Bamboo, Electric Cloud, etc.) to provide additional information for Dynatrace automated root cause analysis. The time of event closure is already known and the event IDs are returned instantly. You can report these events for up to **30 days** into the past. The information-only event types are: \n`CUSTOM_ANNOTATION` \n `CUSTOM_CONFIGURATION` \n `CUSTOM_DEPLOYMENT` \n `CUSTOM_INFO` \n `MARKED_FOR_TERMINATION` \n\n* Push problem-opening events (for example, an error rate increase) to trigger the Dynatrace automated root cause analysis engine.  Correlation IDs are returned instead of event IDs. These events stay open until the specified timeout expires. To prevent expiration, you can refresh these events by sending the same payload again. You can report these events for up to **60 minutes** into the past. The problem-opening event types are (sorted by severity level, descending): \n`AVAILABILITY_EVENT` \n `ERROR_EVENT` \n `PERFORMANCE_EVENT` \n `RESOURCE_CONTENTION` \n\nThe actual set of event parameters depends on the type of your event. See the [documentation](https://www.dynatrace.com/support/help/shortlink/api-events-post-event) for the properties mapping."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"eventType\": \"CUSTOM_ANNOTATION\",\n    \"start\": 1521042929000,\n    \"end\": 1521542929000,\n    \"timeoutMinutes\": 0,\n    \"attachRules\": {\n        \"entityIds\": [\n            \"CUSTOM_DEVICE-0000000000000007\"\n        ],\n        \"tagRule\": [\n            {\n                \"meTypes\": [\n                    \"HOST\"\n                ],\n                \"tags\": [\n                    {\n                        \"context\": \"CONTEXTLESS\",\n                        \"key\": \"customTag\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"source\": \"OpsControl\",\n    \"annotationType\": \"defect\",\n    \"annotationDescription\": \"The coffee machine is broken\"\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/events",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"storedEventIds\": [\n  -51822447,\n  76145193\n ],\n \"storedIds\": [\n  \"qui occaecat\",\n  \"minim aliqu\"\n ],\n \"storedCorrelationIds\": [\n  \"pariatur dolore\",\n  \"consectetur sit\"\n ]\n}"
						}
					]
				},
				{
					"name": "Gets the parameters of the specified event",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/events/:eventId",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								":eventId"
							],
							"variable": [
								{
									"key": "eventId",
									"value": "<string>",
									"description": "(Required) The ID of the required event."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/events/:eventId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"startTime\": -5665716,\n \"endTime\": -84066732,\n \"entityId\": \"et tempor\",\n \"entityName\": \"Duis ullamco\",\n \"severityLevel\": \"MONITORING_UNAVAILABLE\",\n \"impactLevel\": \"ENVIRONMENT\",\n \"eventType\": \"UNEXPECTED_HIGH_LOAD\",\n \"resourceId\": \"dolore aliqua eu\",\n \"resourceName\": \"nisi\",\n \"eventStatus\": \"OPEN\",\n \"tags\": [\n  {\n   \"context\": \"ENVIRONMENT\",\n   \"key\": \"dolo\",\n   \"value\": \"labo\"\n  },\n  {\n   \"context\": \"AWS\",\n   \"key\": \"inci\",\n   \"value\": \"non \"\n  }\n ],\n \"id\": \"in irure in aliquip\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "ext",
					"item": [
						{
							"name": "Pushes third-party synthetic events to Dynatrace",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"syntheticEngineName\": \"<string>\",\n    \"open\": [\n        {\n            \"reason\": \"<string>\",\n            \"testId\": \"<string>\",\n            \"eventId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"eventType\": \"<string>\",\n            \"startTimestamp\": \"<long>\",\n            \"locationIds\": [\n                \"<string>\"\n            ]\n        }\n    ],\n    \"resolved\": [\n        {\n            \"testId\": \"<string>\",\n            \"eventId\": \"<string>\",\n            \"endTimestamp\": \"<long>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/ext/events",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"ext",
										"events"
									]
								}
							},
							"response": [
								{
									"name": "Success. The information is accepted and stored.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"syntheticEngineName\": \"<string>\",\n    \"open\": [\n        {\n            \"reason\": \"<string>\",\n            \"testId\": \"<string>\",\n            \"eventId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"eventType\": \"<string>\",\n            \"startTimestamp\": \"<long>\",\n            \"locationIds\": [\n                \"<string>\"\n            ]\n        }\n    ],\n    \"resolved\": [\n        {\n            \"testId\": \"<string>\",\n            \"eventId\": \"<string>\",\n            \"endTimestamp\": \"<long>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/ext/events",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"ext",
												"events"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"syntheticEngineName\": \"<string>\",\n    \"open\": [\n        {\n            \"reason\": \"<string>\",\n            \"testId\": \"<string>\",\n            \"eventId\": \"<string>\",\n            \"name\": \"<string>\",\n            \"eventType\": \"<string>\",\n            \"startTimestamp\": \"<long>\",\n            \"locationIds\": [\n                \"<string>\"\n            ]\n        }\n    ],\n    \"resolved\": [\n        {\n            \"testId\": \"<string>\",\n            \"eventId\": \"<string>\",\n            \"endTimestamp\": \"<long>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/ext/events",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"ext",
												"events"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Pushes third-party synthetic monitors, locations, and results to Dynatrace",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"messageTimestamp\": \"<long>\",\n    \"syntheticEngineName\": \"<string>\",\n    \"syntheticEngineIconUrl\": \"<string>\",\n    \"locations\": [\n        {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\"\n        }\n    ],\n    \"tests\": [\n        {\n            \"id\": \"<string>\",\n            \"scheduleIntervalInSeconds\": \"<integer>\",\n            \"title\": \"<string>\",\n            \"description\": \"<string>\",\n            \"testSetup\": \"<string>\",\n            \"expirationTimestamp\": \"<long>\",\n            \"drilldownLink\": \"<string>\",\n            \"editLink\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"deleted\": \"<boolean>\",\n            \"locations\": [\n                {\n                    \"id\": \"<string>\",\n                    \"enabled\": \"<boolean>\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"<long>\",\n                    \"title\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"title\": \"<string>\"\n                }\n            ],\n            \"noDataTimeout\": \"<integer>\"\n        }\n    ],\n    \"testResults\": [\n        {\n            \"id\": \"<string>\",\n            \"totalStepCount\": \"<integer>\",\n            \"scheduleIntervalInSeconds\": \"<integer>\",\n            \"locationResults\": [\n                {\n                    \"id\": \"<string>\",\n                    \"startTimestamp\": \"<long>\",\n                    \"success\": \"<boolean>\",\n                    \"successRate\": \"<double>\",\n                    \"responseTimeMillis\": \"<long>\",\n                    \"stepResults\": [\n                        {\n                            \"id\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"startTimestamp\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"responseTimeMillis\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"error\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        },\n                        {\n                            \"id\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"startTimestamp\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"responseTimeMillis\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"error\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/ext/tests",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"ext",
										"tests"
									]
								}
							},
							"response": [
								{
									"name": "Success. The information is accepted and stored.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageTimestamp\": \"<long>\",\n    \"syntheticEngineName\": \"<string>\",\n    \"syntheticEngineIconUrl\": \"<string>\",\n    \"locations\": [\n        {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\"\n        }\n    ],\n    \"tests\": [\n        {\n            \"id\": \"<string>\",\n            \"scheduleIntervalInSeconds\": \"<integer>\",\n            \"title\": \"<string>\",\n            \"description\": \"<string>\",\n            \"testSetup\": \"<string>\",\n            \"expirationTimestamp\": \"<long>\",\n            \"drilldownLink\": \"<string>\",\n            \"editLink\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"deleted\": \"<boolean>\",\n            \"locations\": [\n                {\n                    \"id\": \"<string>\",\n                    \"enabled\": \"<boolean>\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"<long>\",\n                    \"title\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"title\": \"<string>\"\n                }\n            ],\n            \"noDataTimeout\": \"<integer>\"\n        }\n    ],\n    \"testResults\": [\n        {\n            \"id\": \"<string>\",\n            \"totalStepCount\": \"<integer>\",\n            \"scheduleIntervalInSeconds\": \"<integer>\",\n            \"locationResults\": [\n                {\n                    \"id\": \"<string>\",\n                    \"startTimestamp\": \"<long>\",\n                    \"success\": \"<boolean>\",\n                    \"successRate\": \"<double>\",\n                    \"responseTimeMillis\": \"<long>\",\n                    \"stepResults\": [\n                        {\n                            \"id\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"startTimestamp\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"responseTimeMillis\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"error\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        },\n                        {\n                            \"id\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"startTimestamp\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"responseTimeMillis\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"error\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/ext/tests",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"ext",
												"tests"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"messageTimestamp\": \"<long>\",\n    \"syntheticEngineName\": \"<string>\",\n    \"syntheticEngineIconUrl\": \"<string>\",\n    \"locations\": [\n        {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"ip\": \"<string>\"\n        }\n    ],\n    \"tests\": [\n        {\n            \"id\": \"<string>\",\n            \"scheduleIntervalInSeconds\": \"<integer>\",\n            \"title\": \"<string>\",\n            \"description\": \"<string>\",\n            \"testSetup\": \"<string>\",\n            \"expirationTimestamp\": \"<long>\",\n            \"drilldownLink\": \"<string>\",\n            \"editLink\": \"<string>\",\n            \"enabled\": \"<boolean>\",\n            \"deleted\": \"<boolean>\",\n            \"locations\": [\n                {\n                    \"id\": \"<string>\",\n                    \"enabled\": \"<boolean>\"\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"<long>\",\n                    \"title\": \"<string>\"\n                },\n                {\n                    \"id\": \"<long>\",\n                    \"title\": \"<string>\"\n                }\n            ],\n            \"noDataTimeout\": \"<integer>\"\n        }\n    ],\n    \"testResults\": [\n        {\n            \"id\": \"<string>\",\n            \"totalStepCount\": \"<integer>\",\n            \"scheduleIntervalInSeconds\": \"<integer>\",\n            \"locationResults\": [\n                {\n                    \"id\": \"<string>\",\n                    \"startTimestamp\": \"<long>\",\n                    \"success\": \"<boolean>\",\n                    \"successRate\": \"<double>\",\n                    \"responseTimeMillis\": \"<long>\",\n                    \"stepResults\": [\n                        {\n                            \"id\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"startTimestamp\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"responseTimeMillis\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"error\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        },\n                        {\n                            \"id\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"startTimestamp\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"responseTimeMillis\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            \"error\": {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/ext/tests",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"ext",
												"tests"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Modifies the operation state of all third-party monitors",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/ext/stateModifications",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"ext",
										"stateModifications"
									]
								}
							},
							"response": [
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/ext/stateModifications",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"ext",
												"stateModifications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success. The state of third-party monitors has been changed.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/ext/stateModifications",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"ext",
												"stateModifications"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/locations/:locationId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic location.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/synthetic/locations/:locationId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the specified synthetic location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/locations/:locationId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"PRIVATE\",\n    \"name\": \"Linz Location\",\n    \"latitude\": 48.306351,\n    \"longitude\": 14.287399,\n    \"nodes\": [\n        \"93302281\"\n    ],\n    \"status\": \"ENABLED\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/synthetic/locations/:locationId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic location | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/locations/:locationId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/synthetic/locations/:locationId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Lists all synthetic locations (both public and private) available for your environment | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/locations?cloudPlatform=<string>&type=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"locations"
									],
									"query": [
										{
											"key": "cloudPlatform",
											"value": "<string>",
											"description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filters the resulting set of locations by a specific type."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/locations?cloudPlatform=<string>&type=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"locations"
											],
											"query": [
												{
													"key": "cloudPlatform",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a new private synthetic location | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"name\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"regionCode\": \"<string>\",\n    \"city\": \"<string>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"status\": \"<string>\",\n    \"nodes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/locations",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"name\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"regionCode\": \"<string>\",\n    \"city\": \"<string>\",\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\",\n    \"status\": \"<string>\",\n    \"nodes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/locations",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "monitors",
					"item": [
						{
							"name": "{monitor Id}",
							"item": [
								{
									"name": "Gets parameters of the specified synthetic monitor",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/monitors/:monitorId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"monitors",
												":monitorId"
											],
											"variable": [
												{
													"key": "monitorId",
													"value": "<string>",
													"description": "(Required) The ID of the required synthetic monitor"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/synthetic/monitors/:monitorId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"synthetic",
														"monitors",
														":monitorId"
													],
													"variable": [
														{
															"key": "monitorId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates parameters of the specified synthetic monitor",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": \"<boolean>\",\n    \"frequencyMin\": \"<integer>\",\n    \"locations\": [\n        \"<string>\"\n    ],\n    \"manuallyAssignedApps\": [\n        \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"script\": \"<object>\",\n    \"tags\": [\n        {\n            \"context\": \"<string>\",\n            \"key\": \"<string>\",\n            \"source\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"type\": \"<string>\",\n    \"anomalyDetection\": {\n        \"outageHandling\": {\n            \"globalOutage\": \"<boolean>\",\n            \"localOutage\": \"<boolean>\",\n            \"localOutagePolicy\": {\n                \"affectedLocations\": \"<integer>\",\n                \"consecutiveRuns\": \"<integer>\"\n            }\n        },\n        \"loadingTimeThresholds\": {\n            \"enabled\": \"<boolean>\",\n            \"thresholds\": [\n                {\n                    \"type\": \"<string>\",\n                    \"valueMs\": \"<integer>\",\n                    \"requestIndex\": \"<integer>\"\n                }\n            ]\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/monitors/:monitorId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"monitors",
												":monitorId"
											],
											"variable": [
												{
													"key": "monitorId",
													"value": "<string>",
													"description": "(Required) The ID of the synthetic monitor to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The synthetic monitor has been updated. The response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"enabled\": \"<boolean>\",\n    \"frequencyMin\": \"<integer>\",\n    \"locations\": [\n        \"<string>\"\n    ],\n    \"manuallyAssignedApps\": [\n        \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"script\": \"<object>\",\n    \"tags\": [\n        {\n            \"context\": \"<string>\",\n            \"key\": \"<string>\",\n            \"source\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"type\": \"<string>\",\n    \"anomalyDetection\": {\n        \"outageHandling\": {\n            \"globalOutage\": \"<boolean>\",\n            \"localOutage\": \"<boolean>\",\n            \"localOutagePolicy\": {\n                \"affectedLocations\": \"<integer>\",\n                \"consecutiveRuns\": \"<integer>\"\n            }\n        },\n        \"loadingTimeThresholds\": {\n            \"enabled\": \"<boolean>\",\n            \"thresholds\": [\n                {\n                    \"type\": \"<string>\",\n                    \"valueMs\": \"<integer>\",\n                    \"requestIndex\": \"<integer>\"\n                }\n            ]\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/synthetic/monitors/:monitorId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"synthetic",
														"monitors",
														":monitorId"
													],
													"variable": [
														{
															"key": "monitorId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified synthetic monitor",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/monitors/:monitorId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"monitors",
												":monitorId"
											],
											"variable": [
												{
													"key": "monitorId",
													"value": "<string>",
													"description": "(Required) The ID of the synthetic monitor to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The synthetic monitor has been deleted. The response doesn't have a body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/synthetic/monitors/:monitorId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"synthetic",
														"monitors",
														":monitorId"
													],
													"variable": [
														{
															"key": "monitorId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Lists all synthetic monitors in your Dynatrace environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/monitors?managementZone=<long>&tag=<string>&location=<string>&assignedApps=<string>&type=<string>&enabled=<boolean>&credentialId=<string>&credentialOwner=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"monitors"
									],
									"query": [
										{
											"key": "managementZone",
											"value": "<long>",
											"description": "Filters the resulting set of monitors to those which are part of the specified management zone. \n\n Specify the ID of the management zone here."
										},
										{
											"key": "tag",
											"value": "<string>",
											"description": "Filters the resulting set of monitors by specified tags. \n\nYou can specify several tags in the following format: `tag=tag1&tag=tag2`. The monitor has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use following format: `[context]key:value`."
										},
										{
											"key": "location",
											"value": "<string>",
											"description": "Filters the resulting set of monitors to those assigned to a specified Synthetic location.  \n\n Specify the ID of the location here."
										},
										{
											"key": "assignedApps",
											"value": "<string>",
											"description": "Filters the resulting set of monitors to those assigned to the specified applications. \n\nYou can specify several applications in the following format: `assignedApps=app1&assignedApps=app2`. The monitor has to have **all** the specified applications assigned. \n\nSpecify Dynatrace entity IDs of applications here."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filters the resulting set of monitors to those of the specified type: `BROWSER` or `HTTP`."
										},
										{
											"key": "enabled",
											"value": "<boolean>",
											"description": "Filters the resulting set of monitors to those which are enabled (`true`) or disabled (`false`)."
										},
										{
											"key": "credentialId",
											"value": "<string>",
											"description": "Filters the resulting set of monitors to those using the specified credential set. \n\nSpecify the ID of the credentials set here."
										},
										{
											"key": "credentialOwner",
											"value": "<string>",
											"description": "Filters the resulting set of monitors to those using a credential owned by the specified user."
										}
									]
								},
								"description": "The full list can be lengthy, but you can narrow it down by specifying filter query parameters."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/monitors?managementZone=<long>&tag=<string>&location=<string>&assignedApps=<string>&type=<string>&enabled=<boolean>&credentialId=<string>&credentialOwner=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"monitors"
											],
											"query": [
												{
													"key": "managementZone",
													"value": "<long>"
												},
												{
													"key": "tag",
													"value": "<string>"
												},
												{
													"key": "location",
													"value": "<string>"
												},
												{
													"key": "assignedApps",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "enabled",
													"value": "<boolean>"
												},
												{
													"key": "credentialId",
													"value": "<string>"
												},
												{
													"key": "credentialOwner",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a new synthetic monitor",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": \"<boolean>\",\n    \"frequencyMin\": \"<integer>\",\n    \"locations\": [\n        \"<string>\"\n    ],\n    \"manuallyAssignedApps\": [\n        \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"script\": \"<object>\",\n    \"tags\": [\n        {\n            \"context\": \"<string>\",\n            \"key\": \"<string>\",\n            \"source\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"type\": \"<string>\",\n    \"anomalyDetection\": {\n        \"outageHandling\": {\n            \"globalOutage\": \"<boolean>\",\n            \"localOutage\": \"<boolean>\",\n            \"localOutagePolicy\": {\n                \"affectedLocations\": \"<integer>\",\n                \"consecutiveRuns\": \"<integer>\"\n            }\n        },\n        \"loadingTimeThresholds\": {\n            \"enabled\": \"<boolean>\",\n            \"thresholds\": [\n                {\n                    \"type\": \"<string>\",\n                    \"valueMs\": \"<integer>\",\n                    \"requestIndex\": \"<integer>\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/monitors",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"monitors"
									]
								}
							},
							"response": [
								{
									"name": "Success. The new synthetic monitor has been created. The response contains the Dynatrace entity ID of the new monitor.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": \"<boolean>\",\n    \"frequencyMin\": \"<integer>\",\n    \"locations\": [\n        \"<string>\"\n    ],\n    \"manuallyAssignedApps\": [\n        \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"script\": \"<object>\",\n    \"tags\": [\n        {\n            \"context\": \"<string>\",\n            \"key\": \"<string>\",\n            \"source\": \"<string>\",\n            \"value\": \"<string>\"\n        }\n    ],\n    \"type\": \"<string>\",\n    \"anomalyDetection\": {\n        \"outageHandling\": {\n            \"globalOutage\": \"<boolean>\",\n            \"localOutage\": \"<boolean>\",\n            \"localOutagePolicy\": {\n                \"affectedLocations\": \"<integer>\",\n                \"consecutiveRuns\": \"<integer>\"\n            }\n        },\n        \"loadingTimeThresholds\": {\n            \"enabled\": \"<boolean>\",\n            \"thresholds\": [\n                {\n                    \"type\": \"<string>\",\n                    \"valueMs\": \"<integer>\",\n                    \"requestIndex\": \"<integer>\"\n                }\n            ]\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/monitors",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"monitors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic nodes available in your environment | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/nodes",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/nodes",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic node | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/synthetic/nodes/:nodeId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "<string>",
											"description": "(Required) The ID of the required synthetic node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/synthetic/nodes/:nodeId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "maintenance",
			"item": [
				{
					"name": "{uid}",
					"item": [
						{
							"name": "Lists all parameters of the specified maintenance window.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/maintenance/:uid",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"maintenance",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "<string>",
											"description": "(Required) The ID of the required maintenance window."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/maintenance/:uid",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"maintenance",
												":uid"
											],
											"variable": [
												{
													"key": "uid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"schedule\": {\n  \"maintenanceEnd\": \"anim dolore ullamco\",\n  \"maintenanceStart\": \"voluptate dolor et do nisi\",\n  \"type\": \"Month\",\n  \"timezoneId\": \"dolore irure voluptate qui adipisicing\",\n  \"recurrence\": {\n   \"duration\": -45824480,\n   \"start\": \"in au\",\n   \"day\": \"SUNDAY\",\n   \"dayOfMonth\": 89873993\n  }\n },\n \"type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"suppressAlerts\": \"<boolean>\",\n \"suppressProblems\": \"<boolean>\",\n \"scope\": {\n  \"entities\": [\n   \"pariatur anim consequat quis mag\",\n   \"ut aute proident occaecat\"\n  ],\n  \"matches\": [\n   {\n    \"type\": \"GOOGLE_COMPUTE_ENGINE\",\n    \"tags\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   },\n   {\n    \"type\": \"SERVICE_METHOD\",\n    \"tags\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ]\n   }\n  ]\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified maintenance window",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/maintenance/:uid",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"maintenance",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "<string>",
											"description": "(Required) The ID of the maintenance window to delete."
										}
									]
								},
								"description": "Deletion cannot be undone."
							},
							"response": [
								{
									"name": "Success. The maintenance window has been deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/maintenance/:uid",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"maintenance",
												":uid"
											],
											"variable": [
												{
													"key": "uid"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Lists all parameters of all maintenance windows available in your Dynatrace environment.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/maintenance?from=0&to=0&type=Unknown",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"maintenance"
							],
							"query": [
								{
									"key": "from",
									"value": "0",
									"description": "The start timestamp of the inquiry timeframe, in UTC milliseconds. \n\n If not set, the current time is used."
								},
								{
									"key": "to",
									"value": "0",
									"description": "The end timestamp of the inquiry timeframe, in UTC milliseconds. \n\n If not set, all maintenance windows beginning after the `from` timestamp will be returned."
								},
								{
									"key": "type",
									"value": "Unknown",
									"description": "The type of the maintenance window to return. \n\n If `Unknown` or not set, all maintenance windows are returned."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/maintenance?from=0&to=0&type=Unknown",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "to",
											"value": "0"
										},
										{
											"key": "type",
											"value": "Unknown"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"schedule\": {\n   \"maintenanceEnd\": \"ea minim irure aliqua\",\n   \"maintenanceStart\": \"cillum\",\n   \"type\": \"Day\",\n   \"timezoneId\": \"voluptate elit exercitation dolore\",\n   \"recurrence\": {\n    \"duration\": 66250094,\n    \"start\": \"culpa nulla sint\",\n    \"day\": \"TUESDAY\",\n    \"dayOfMonth\": 98291019\n   }\n  },\n  \"type\": \"Unplanned\",\n  \"id\": \"in esse proident\",\n  \"description\": \"voluptate commodo\",\n  \"suppressAlerts\": true,\n  \"suppressProblems\": false,\n  \"scope\": {\n   \"entities\": [\n    \"cupidatat elit\",\n    \"sit magna\"\n   ],\n   \"matches\": [\n    {\n     \"type\": \"VIRTUALMACHINE\",\n     \"tags\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"type\": \"APPLICATION_METHOD\",\n     \"tags\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  }\n },\n {\n  \"schedule\": {\n   \"maintenanceEnd\": \"ullamco ex laboris non\",\n   \"maintenanceStart\": \"dolore Excepteur proident\",\n   \"type\": \"Once\",\n   \"timezoneId\": \"consequat dolor sed occaecat\",\n   \"recurrence\": {\n    \"duration\": -38412615,\n    \"start\": \"velit labore adipisicing\",\n    \"day\": \"FRIDAY\",\n    \"dayOfMonth\": 21681868\n   }\n  },\n  \"type\": \"Planned\",\n  \"id\": \"repr\",\n  \"description\": \"ipsum veniam anim ullamco\",\n  \"suppressAlerts\": true,\n  \"suppressProblems\": false,\n  \"scope\": {\n   \"entities\": [\n    \"adipisicing cupidatat id\",\n    \"esse\"\n   ],\n   \"matches\": [\n    {\n     \"type\": \"AZURE_SERVICE_BUS_TOPIC\",\n     \"tags\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    },\n    {\n     \"type\": \"EXTERNAL_SYNTHETIC_TEST_STEP\",\n     \"tags\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ]\n    }\n   ]\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Creates a new or updates an existing maintenance window",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schedule\": {\n        \"maintenanceEnd\": \"laboris Lorem do eu sed\",\n        \"maintenanceStart\": \"cillum pariatur\",\n        \"type\": \"Day\",\n        \"timezoneId\": \"aliqua\",\n        \"recurrence\": {\n            \"duration\": 61850302,\n            \"start\": \"Excepteur in\",\n            \"day\": \"FRIDAY\",\n            \"dayOfMonth\": -98523102\n        }\n    },\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"suppressAlerts\": \"<boolean>\",\n    \"suppressProblems\": \"<boolean>\",\n    \"scope\": {\n        \"entities\": [\n            \"incididunt fugiat\",\n            \"dolore nostrud\"\n        ],\n        \"matches\": [\n            {\n                \"type\": \"DOCKER_CONTAINER_GROUP_INSTANCE\",\n                \"tags\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"RELATIONAL_DATABASE_SERVICE\",\n                \"tags\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{tenant}}/api/v1/maintenance",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"maintenance"
							]
						}
					},
					"response": [
						{
							"name": "Success. The maintenance window has been updated.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schedule\": {\n        \"maintenanceEnd\": \"anim dolore ullamco\",\n        \"maintenanceStart\": \"voluptate dolor et do nisi\",\n        \"type\": \"Month\",\n        \"timezoneId\": \"dolore irure voluptate qui adipisicing\",\n        \"recurrence\": {\n            \"duration\": -45824480,\n            \"start\": \"in au\",\n            \"day\": \"SUNDAY\",\n            \"dayOfMonth\": 89873993\n        }\n    },\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"suppressAlerts\": \"<boolean>\",\n    \"suppressProblems\": \"<boolean>\",\n    \"scope\": {\n        \"entities\": [\n            \"pariatur anim consequat quis mag\",\n            \"ut aute proident occaecat\"\n        ],\n        \"matches\": [\n            {\n                \"type\": \"GOOGLE_COMPUTE_ENGINE\",\n                \"tags\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"SERVICE_METHOD\",\n                \"tags\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/maintenance",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"maintenance"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schedule\": {\n        \"maintenanceEnd\": \"anim dolore ullamco\",\n        \"maintenanceStart\": \"voluptate dolor et do nisi\",\n        \"type\": \"Month\",\n        \"timezoneId\": \"dolore irure voluptate qui adipisicing\",\n        \"recurrence\": {\n            \"duration\": -45824480,\n            \"start\": \"in au\",\n            \"day\": \"SUNDAY\",\n            \"dayOfMonth\": 89873993\n        }\n    },\n    \"type\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"suppressAlerts\": \"<boolean>\",\n    \"suppressProblems\": \"<boolean>\",\n    \"scope\": {\n        \"entities\": [\n            \"pariatur anim consequat quis mag\",\n            \"ut aute proident occaecat\"\n        ],\n        \"matches\": [\n            {\n                \"type\": \"GOOGLE_COMPUTE_ENGINE\",\n                \"tags\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"SERVICE_METHOD\",\n                \"tags\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/maintenance",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"maintenance"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "entity",
			"item": [
				{
					"name": "infrastructure",
					"item": [
						{
							"name": "processes",
							"item": [
								{
									"name": "Lists all monitored processes along with their parameters",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/processes?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&hostTag=<string>&host=<string>&actualMonitoringState=<string>&expectedMonitoringState=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"processes"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>",
													"description": "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used."
												},
												{
													"key": "endTimestamp",
													"value": "<long>",
													"description": "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days."
												},
												{
													"key": "relativeTime",
													"value": "<string>",
													"description": "The relative timeframe, back from now."
												},
												{
													"key": "tag",
													"value": "<string>",
													"description": "Filters the resulting set of processes by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The process has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`."
												},
												{
													"key": "entity",
													"value": "<string>",
													"description": "Filters result to the specified processes only. \n\n To specify several processes use the following format: `entity=ID1&entity=ID2`."
												},
												{
													"key": "hostTag",
													"value": "<string>",
													"description": "Filters processes by the host they're running at. \n\n Specify tags of the host you're interested in."
												},
												{
													"key": "host",
													"value": "<string>",
													"description": "Filters processes by the host they're running at. \n\n Specify Dynatrace IDs of the host you're interested in. \n\n To specify several hosts use the following format: `host=hostID1&host=hostID2`. \n\n The **OR** logic applies."
												},
												{
													"key": "actualMonitoringState",
													"value": "<string>",
													"description": "Filters processes by the actual monitoring state of the process."
												},
												{
													"key": "expectedMonitoringState",
													"value": "<string>",
													"description": "Filters processes by the expected monitoring state of the process."
												},
												{
													"key": "managementZone",
													"value": "<long>",
													"description": "Only return processes that are part of the specified management zone."
												},
												{
													"key": "includeDetails",
													"value": "true",
													"description": "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used."
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "The number of processes per result page. \n\n If not set, pagination is not used and the result contains all processes fitting the specified filtering criteria."
												},
												{
													"key": "nextPageKey",
													"value": "<string>",
													"description": "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages."
												}
											]
										},
										"description": "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/processes?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&hostTag=<string>&host=<string>&actualMonitoringState=<string>&expectedMonitoringState=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"processes"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														},
														{
															"key": "relativeTime",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														},
														{
															"key": "entity",
															"value": "<string>"
														},
														{
															"key": "hostTag",
															"value": "<string>"
														},
														{
															"key": "host",
															"value": "<string>"
														},
														{
															"key": "actualMonitoringState",
															"value": "<string>"
														},
														{
															"key": "expectedMonitoringState",
															"value": "<string>"
														},
														{
															"key": "managementZone",
															"value": "<long>"
														},
														{
															"key": "includeDetails",
															"value": "true"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "nextPageKey",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Total-Count",
													"value": "81866588",
													"description": "The estimated number of results."
												},
												{
													"key": "Next-Page-Key",
													"value": "nostrud culpa non",
													"description": "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded."
												},
												{
													"key": "Page-Size",
													"value": "nostrud culpa non",
													"description": "The maximum number of results per page."
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/processes?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&hostTag=<string>&host=<string>&actualMonitoringState=<string>&expectedMonitoringState=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"processes"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														},
														{
															"key": "relativeTime",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														},
														{
															"key": "entity",
															"value": "<string>"
														},
														{
															"key": "hostTag",
															"value": "<string>"
														},
														{
															"key": "host",
															"value": "<string>"
														},
														{
															"key": "actualMonitoringState",
															"value": "<string>"
														},
														{
															"key": "expectedMonitoringState",
															"value": "<string>"
														},
														{
															"key": "managementZone",
															"value": "<long>"
														},
														{
															"key": "includeDetails",
															"value": "true"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "nextPageKey",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "List properties of the specified process",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/processes/:meIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"processes",
												":meIdentifier"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required process."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/processes/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"processes",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "hosts",
							"item": [
								{
									"name": "{host Id}/logs",
									"item": [
										{
											"name": "jobs/{job Id}",
											"item": [
												{
													"name": "records",
													"item": [
														{
															"name": "Gets the full content of the analyzed log",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records"
																	],
																	"query": [
																		{
																			"key": "scrollToken",
																			"value": "<string>",
																			"description": "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned."
																		},
																		{
																			"key": "pageSize",
																			"value": "<integer>",
																			"description": "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`."
																		}
																	],
																	"variable": [
																		{
																			"key": "hostId",
																			"value": "<string>",
																			"description": "(Required) The Dynatrace entity ID of the required host."
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-post-job) request."
																		}
																	]
																},
																"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-get-job-status) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000."
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																			"host": [
																				"{{tenant}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"entity",
																				"infrastructure",
																				"hosts",
																				":hostId",
																				"logs",
																				"jobs",
																				":jobId",
																				"records"
																			],
																			"query": [
																				{
																					"key": "scrollToken",
																					"value": "<string>"
																				},
																				{
																					"key": "pageSize",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "hostId"
																				},
																				{
																					"key": "jobId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json; charset=utf-8"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Gets the filtered content of the analyzed log",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json; charset=utf-8"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filterQuery\": \"<string>\",\n    \"sortingAttributes\": {\n        \"sortAscending\": \"<boolean>\",\n        \"sortFieldName\": \"<string>\"\n    }\n}"
																},
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records"
																	],
																	"query": [
																		{
																			"key": "scrollToken",
																			"value": "<string>",
																			"description": "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned."
																		},
																		{
																			"key": "pageSize",
																			"value": "<integer>",
																			"description": "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`."
																		}
																	],
																	"variable": [
																		{
																			"key": "hostId",
																			"value": "<string>",
																			"description": "(Required) The Dynatrace entity ID of the required host."
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-post-job) request."
																		}
																	]
																},
																"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-get-job-status) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000."
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"filterQuery\": \"<string>\",\n    \"sortingAttributes\": {\n        \"sortAscending\": \"<boolean>\",\n        \"sortFieldName\": \"<string>\"\n    }\n}"
																		},
																		"url": {
																			"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																			"host": [
																				"{{tenant}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"entity",
																				"infrastructure",
																				"hosts",
																				":hostId",
																				"logs",
																				"jobs",
																				":jobId",
																				"records"
																			],
																			"query": [
																				{
																					"key": "scrollToken",
																					"value": "<string>"
																				},
																				{
																					"key": "pageSize",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "hostId"
																				},
																				{
																					"key": "jobId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json; charset=utf-8"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Gets the top values of fields present in the content of the analyzed log",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json; charset=utf-8"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filterQuery\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId/records/top",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records",
																		"top"
																	],
																	"variable": [
																		{
																			"key": "hostId",
																			"value": "<string>",
																			"description": "(Required) The Dynatrace entity ID of the required host."
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-post-job) request."
																		}
																	]
																},
																"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-get-job-status) request."
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"filterQuery\": \"`testCustomField` = 4624\"\n}"
																		},
																		"url": {
																			"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId/records/top",
																			"host": [
																				"{{tenant}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"entity",
																				"infrastructure",
																				"hosts",
																				":hostId",
																				"logs",
																				"jobs",
																				":jobId",
																				"records",
																				"top"
																			],
																			"variable": [
																				{
																					"key": "hostId"
																				},
																				{
																					"key": "jobId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json; charset=utf-8"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Gets status of the specified log analysis job",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":hostId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "hostId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required host."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-post-job) request."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "hostId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Deletes or cancels the specified log analysis job",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":hostId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "hostId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required host."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the log analysis job to be deleted. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-host-post-job) request."
																}
															]
														}
													},
													"response": [
														{
															"name": "Failed. See the response body for details",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "hostId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not found. See the response body for details.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "hostId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Success. The job has been deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"hosts",
																		":hostId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "hostId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Lists all the available OS logs on the specified host",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts",
														":hostId",
														"logs"
													],
													"variable": [
														{
															"key": "hostId",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":hostId",
																"logs"
															],
															"variable": [
																{
																	"key": "hostId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Starts the analysis job for the specified OS log",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parsingMode\": \"<string>\",\n    \"customParsingPatterns\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts",
														":hostId",
														"logs",
														":logPath"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "Narrows down the scope of the analysis to the entries, matching the specified criteria. \n\nThe criteria must use the [Dynatrace search query language](https://www.dynatrace.com/support/help/shortlink/log-viewer#anchor-query-syntax)."
														},
														{
															"key": "startTimestamp",
															"value": "<long>",
															"description": "The start timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then 2 hours behind from current timestamp is used."
														},
														{
															"key": "endTimestamp",
															"value": "<long>",
															"description": "The end timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then the current timestamp is used."
														}
													],
													"variable": [
														{
															"key": "hostId",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required host."
														},
														{
															"key": "logPath",
															"value": "<string>",
															"description": "(Required) The full pathname of the log."
														}
													]
												},
												"description": "The response returns the ID of the job."
											},
											"response": [
												{
													"name": "Failed. See the response body for details.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":hostId",
																"logs",
																":logPath"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "startTimestamp",
																	"value": "<long>"
																},
																{
																	"key": "endTimestamp",
																	"value": "<long>"
																}
															],
															"variable": [
																{
																	"key": "hostId"
																},
																{
																	"key": "logPath"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The response body contains the ID of the job.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":hostId",
																"logs",
																":logPath"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "startTimestamp",
																	"value": "<long>"
																},
																{
																	"key": "endTimestamp",
																	"value": "<long>"
																}
															],
															"variable": [
																{
																	"key": "hostId"
																},
																{
																	"key": "logPath"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "nostrud culpa non"
												},
												{
													"name": "Not found. See the response body for details.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:hostId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":hostId",
																"logs",
																":logPath"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "startTimestamp",
																	"value": "<long>"
																},
																{
																	"key": "endTimestamp",
																	"value": "<long>"
																}
															],
															"variable": [
																{
																	"key": "hostId"
																},
																{
																	"key": "logPath"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{me Identifier}",
									"item": [
										{
											"name": "Gets parameters of the specified host",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":meIdentifier"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates properties of the specified host",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tags\": [\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the host to be updated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":meIdentifier"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The parameters of the host have been updated.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":meIdentifier"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove tag of the specified host",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier/tags/:tag",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts",
														":meIdentifier",
														"tags",
														":tag"
													],
													"variable": [
														{
															"key": "meIdentifier",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the host."
														},
														{
															"key": "tag",
															"value": "<string>",
															"description": "(Required) The tag to be removed."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The tag of the host has been removed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier/tags/:tag",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":meIdentifier",
																"tags",
																":tag"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																},
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failure. The tag could not be found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier/tags/:tag",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":meIdentifier",
																"tags",
																":tag"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																},
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts/:meIdentifier/tags/:tag",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"hosts",
																":meIdentifier",
																"tags",
																":tag"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																},
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Lists all available hosts in your environment",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&showMonitoringCandidates=<boolean>&entity=<string>&managementZone=<long>&hostGroupId=<string>&hostGroupName=<string>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"hosts"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>",
													"description": "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used."
												},
												{
													"key": "endTimestamp",
													"value": "<long>",
													"description": "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days."
												},
												{
													"key": "relativeTime",
													"value": "<string>",
													"description": "The relative timeframe, back from now."
												},
												{
													"key": "tag",
													"value": "<string>",
													"description": "Filters the resulting set of hosts by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`."
												},
												{
													"key": "showMonitoringCandidates",
													"value": "<boolean>",
													"description": "Includes (`true`) or excludes (`false`) a monitoring candidate in the response. \n\nMonitoring candidates are network entities that are detected but not monitored."
												},
												{
													"key": "entity",
													"value": "<string>",
													"description": "Filters result to the specified hosts only. \n\n To specify several hosts use the following format: `entity=ID1&entity=ID2`."
												},
												{
													"key": "managementZone",
													"value": "<long>",
													"description": "Only return hosts that are part of the specified management zone."
												},
												{
													"key": "hostGroupId",
													"value": "<string>",
													"description": "Filters the resulting set of hosts by the specified host group. \n\n Specify the Dynatrace IDs of the host group you're interested in."
												},
												{
													"key": "hostGroupName",
													"value": "<string>",
													"description": "Filters the resulting set of hosts by the specified host group. \n\n Specify the name of the host group you're interested in."
												},
												{
													"key": "includeDetails",
													"value": "true",
													"description": "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used."
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "The number of hosts per result page. \n\n If not set, pagination is not used and the result contains all hosts fitting the specified filtering criteria."
												},
												{
													"key": "nextPageKey",
													"value": "<string>",
													"description": "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages."
												}
											]
										},
										"description": "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&showMonitoringCandidates=<boolean>&entity=<string>&managementZone=<long>&hostGroupId=<string>&hostGroupName=<string>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														},
														{
															"key": "relativeTime",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														},
														{
															"key": "showMonitoringCandidates",
															"value": "<boolean>"
														},
														{
															"key": "entity",
															"value": "<string>"
														},
														{
															"key": "managementZone",
															"value": "<long>"
														},
														{
															"key": "hostGroupId",
															"value": "<string>"
														},
														{
															"key": "hostGroupName",
															"value": "<string>"
														},
														{
															"key": "includeDetails",
															"value": "true"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "nextPageKey",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Total-Count",
													"value": "81866588",
													"description": "The estimated number of results."
												},
												{
													"key": "Next-Page-Key",
													"value": "nostrud culpa non",
													"description": "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded."
												},
												{
													"key": "Page-Size",
													"value": "nostrud culpa non",
													"description": "The maximum number of results per page."
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/hosts?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&showMonitoringCandidates=<boolean>&entity=<string>&managementZone=<long>&hostGroupId=<string>&hostGroupName=<string>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"hosts"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														},
														{
															"key": "relativeTime",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														},
														{
															"key": "showMonitoringCandidates",
															"value": "<boolean>"
														},
														{
															"key": "entity",
															"value": "<string>"
														},
														{
															"key": "managementZone",
															"value": "<long>"
														},
														{
															"key": "hostGroupId",
															"value": "<string>"
														},
														{
															"key": "hostGroupName",
															"value": "<string>"
														},
														{
															"key": "includeDetails",
															"value": "true"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "nextPageKey",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "process-groups",
							"item": [
								{
									"name": "{pg Id}/logs",
									"item": [
										{
											"name": "jobs/{job Id}",
											"item": [
												{
													"name": "records",
													"item": [
														{
															"name": "Gets the content of the analyzed log",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records"
																	],
																	"query": [
																		{
																			"key": "scrollToken",
																			"value": "<string>",
																			"description": "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned."
																		},
																		{
																			"key": "pageSize",
																			"value": "<integer>",
																			"description": "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`."
																		}
																	],
																	"variable": [
																		{
																			"key": "pgId",
																			"value": "<string>",
																			"description": "(Required) The Dynatrace entity ID of the required process group."
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-post-job) request."
																		}
																	]
																},
																"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-get-job-status) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000."
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																			"host": [
																				"{{tenant}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"entity",
																				"infrastructure",
																				"process-groups",
																				":pgId",
																				"logs",
																				"jobs",
																				":jobId",
																				"records"
																			],
																			"query": [
																				{
																					"key": "scrollToken",
																					"value": "<string>"
																				},
																				{
																					"key": "pageSize",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "pgId"
																				},
																				{
																					"key": "jobId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json; charset=utf-8"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Gets the content of the analyzed log",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json; charset=utf-8"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filterQuery\": \"<string>\",\n    \"sortingAttributes\": {\n        \"sortAscending\": \"<boolean>\",\n        \"sortFieldName\": \"<string>\"\n    }\n}"
																},
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records"
																	],
																	"query": [
																		{
																			"key": "scrollToken",
																			"value": "<string>",
																			"description": "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned."
																		},
																		{
																			"key": "pageSize",
																			"value": "<integer>",
																			"description": "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`."
																		}
																	],
																	"variable": [
																		{
																			"key": "pgId",
																			"value": "<string>",
																			"description": "(Required) The Dynatrace entity ID of the required process group."
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-post-job) request."
																		}
																	]
																},
																"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-get-job-status) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000."
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"filterQuery\": \"<string>\",\n    \"sortingAttributes\": {\n        \"sortAscending\": \"<boolean>\",\n        \"sortFieldName\": \"<string>\"\n    }\n}"
																		},
																		"url": {
																			"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																			"host": [
																				"{{tenant}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"entity",
																				"infrastructure",
																				"process-groups",
																				":pgId",
																				"logs",
																				"jobs",
																				":jobId",
																				"records"
																			],
																			"query": [
																				{
																					"key": "scrollToken",
																					"value": "<string>"
																				},
																				{
																					"key": "pageSize",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "pgId"
																				},
																				{
																					"key": "jobId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json; charset=utf-8"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Gets the top values of fields present in the content of the analyzed log",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json; charset=utf-8"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filterQuery\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId/records/top",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records",
																		"top"
																	],
																	"variable": [
																		{
																			"key": "pgId",
																			"value": "<string>",
																			"description": "(Required) The Dynatrace entity ID of the required process group."
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-post-job) request."
																		}
																	]
																},
																"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-get-job-status) request."
															},
															"response": [
																{
																	"name": "Success",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"filterQuery\": \"`testCustomField` = 4624\"\n}"
																		},
																		"url": {
																			"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId/records/top",
																			"host": [
																				"{{tenant}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"entity",
																				"infrastructure",
																				"process-groups",
																				":pgId",
																				"logs",
																				"jobs",
																				":jobId",
																				"records",
																				"top"
																			],
																			"variable": [
																				{
																					"key": "pgId"
																				},
																				{
																					"key": "jobId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json; charset=utf-8"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													],
													"protocolProfileBehavior": {},
													"_postman_isSubFolder": true
												},
												{
													"name": "Gets status of the specified log analysis job",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":pgId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "pgId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required process group."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-post-job) request."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "pgId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Deletes or cancels the specified log analysis job",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":pgId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "pgId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required process group."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the log analysis job to be deleted. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-pg-post-job) request."
																}
															]
														}
													},
													"response": [
														{
															"name": "Failed. See response body for details",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "pgId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Success. The job has been deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "pgId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not found. See response body for details",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/jobs/:jobId",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"process-groups",
																		":pgId",
																		"logs",
																		"jobs",
																		":jobId"
																	],
																	"variable": [
																		{
																			"key": "pgId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Lists all the available logs of the specified process group",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"process-groups",
														":pgId",
														"logs"
													],
													"variable": [
														{
															"key": "pgId",
															"value": "<string>",
															"description": "(Required) The entity ID of the process group."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":pgId",
																"logs"
															],
															"variable": [
																{
																	"key": "pgId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Starts analysis job for the specified process group log",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parsingMode\": \"<string>\",\n    \"customParsingPatterns\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/:logPath?hostFilter=<string>&query=<string>&startTimestamp=<long>&endTimestamp=<long>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"process-groups",
														":pgId",
														"logs",
														":logPath"
													],
													"query": [
														{
															"key": "hostFilter",
															"value": "<string>",
															"description": "Narrows down the scope of the analysis to process groups, running at the specified hosts. \n\nSpecify the entity ID of the required host here. To specify several IDs, separate them with a comma."
														},
														{
															"key": "query",
															"value": "<string>",
															"description": "Narrows down the scope of the analysis to the entries, matching the specified criteria. \n\nThe criteria must use the [Dynatrace search query language](https://www.dynatrace.com/support/help/shortlink/log-viewer#anchor-query-syntax)."
														},
														{
															"key": "startTimestamp",
															"value": "<long>",
															"description": "The start timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then 2 hours behind from current timestamp is used."
														},
														{
															"key": "endTimestamp",
															"value": "<long>",
															"description": "The end timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then the current timestamp is used."
														}
													],
													"variable": [
														{
															"key": "pgId",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required process group."
														},
														{
															"key": "logPath",
															"value": "<string>",
															"description": "(Required) The full pathname of the log."
														}
													]
												}
											},
											"response": [
												{
													"name": "Not found. See response body for details",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/:logPath?hostFilter=<string>&query=<string>&startTimestamp=<long>&endTimestamp=<long>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":pgId",
																"logs",
																":logPath"
															],
															"query": [
																{
																	"key": "hostFilter",
																	"value": "<string>"
																},
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "startTimestamp",
																	"value": "<long>"
																},
																{
																	"key": "endTimestamp",
																	"value": "<long>"
																}
															],
															"variable": [
																{
																	"key": "pgId"
																},
																{
																	"key": "logPath"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The response body contains the ID of the job.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/:logPath?hostFilter=<string>&query=<string>&startTimestamp=<long>&endTimestamp=<long>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":pgId",
																"logs",
																":logPath"
															],
															"query": [
																{
																	"key": "hostFilter",
																	"value": "<string>"
																},
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "startTimestamp",
																	"value": "<long>"
																},
																{
																	"key": "endTimestamp",
																	"value": "<long>"
																}
															],
															"variable": [
																{
																	"key": "pgId"
																},
																{
																	"key": "logPath"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "nostrud culpa non"
												},
												{
													"name": "Failed. See response body for details",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:pgId/logs/:logPath?hostFilter=<string>&query=<string>&startTimestamp=<long>&endTimestamp=<long>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":pgId",
																"logs",
																":logPath"
															],
															"query": [
																{
																	"key": "hostFilter",
																	"value": "<string>"
																},
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "startTimestamp",
																	"value": "<long>"
																},
																{
																	"key": "endTimestamp",
																	"value": "<long>"
																}
															],
															"variable": [
																{
																	"key": "pgId"
																},
																{
																	"key": "logPath"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "{me Identifier}",
									"item": [
										{
											"name": "List properties of the specified process group",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"process-groups",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required process group."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:meIdentifier",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":meIdentifier"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates properties of the specified process group",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tags\": [\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"process-groups",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the process group to be updated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:meIdentifier",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":meIdentifier"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The parameters of the process group have been updated.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups/:meIdentifier",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"process-groups",
																":meIdentifier"
															],
															"variable": [
																{
																	"key": "meIdentifier"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Lists all process groups of your environment, along with their parameters",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&host=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"process-groups"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>",
													"description": "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used."
												},
												{
													"key": "endTimestamp",
													"value": "<long>",
													"description": "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days."
												},
												{
													"key": "relativeTime",
													"value": "<string>",
													"description": "The relative timeframe, back from now."
												},
												{
													"key": "tag",
													"value": "<string>",
													"description": "Filters the resulting set of process groups by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The process group has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`."
												},
												{
													"key": "entity",
													"value": "<string>",
													"description": "Filters result to the specified process groups only. \n\n To specify several process groups use the following format: `entity=ID1&entity=ID2`."
												},
												{
													"key": "host",
													"value": "<string>",
													"description": "Filters process groups by the host they're running at. \n\n Specify Dynatrace IDs of the host you're interested in. \n\n To specify several hosts use the following format: `host=hostID1&host=hostID2`. \n\n The **OR** logic applies."
												},
												{
													"key": "managementZone",
													"value": "<long>",
													"description": "Only return process groups that are part of the specified management zone."
												},
												{
													"key": "includeDetails",
													"value": "true",
													"description": "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used."
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "The number of process groups per result page. \n\n If not set, pagination is not used and the result contains all process groups fitting the specified filtering criteria."
												},
												{
													"key": "nextPageKey",
													"value": "<string>",
													"description": "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages."
												}
											]
										},
										"description": "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages."
									},
									"response": [
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&host=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"process-groups"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														},
														{
															"key": "relativeTime",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														},
														{
															"key": "entity",
															"value": "<string>"
														},
														{
															"key": "host",
															"value": "<string>"
														},
														{
															"key": "managementZone",
															"value": "<long>"
														},
														{
															"key": "includeDetails",
															"value": "true"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "nextPageKey",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/process-groups?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&host=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"process-groups"
													],
													"query": [
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														},
														{
															"key": "relativeTime",
															"value": "<string>"
														},
														{
															"key": "tag",
															"value": "<string>"
														},
														{
															"key": "entity",
															"value": "<string>"
														},
														{
															"key": "host",
															"value": "<string>"
														},
														{
															"key": "managementZone",
															"value": "<long>"
														},
														{
															"key": "includeDetails",
															"value": "true"
														},
														{
															"key": "pageSize",
															"value": "<integer>"
														},
														{
															"key": "nextPageKey",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Total-Count",
													"value": "81866588",
													"description": "The estimated number of results."
												},
												{
													"key": "Next-Page-Key",
													"value": "nostrud culpa non",
													"description": "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded."
												},
												{
													"key": "Page-Size",
													"value": "nostrud culpa non",
													"description": "The maximum number of results per page."
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "custom-devices/{custom Device Id}/logs",
							"item": [
								{
									"name": "jobs/{job Id}",
									"item": [
										{
											"name": "records",
											"item": [
												{
													"name": "Gets the content of the analyzed log",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId",
																"records"
															],
															"query": [
																{
																	"key": "scrollToken",
																	"value": "<string>",
																	"description": "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned."
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`."
																}
															],
															"variable": [
																{
																	"key": "customDeviceId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required custom device."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-post-job) request."
																}
															]
														},
														"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-get-job-status) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000."
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"custom-devices",
																		":customDeviceId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records"
																	],
																	"query": [
																		{
																			"key": "scrollToken",
																			"value": "<string>"
																		},
																		{
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customDeviceId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Gets the filtered content of the analyzed log",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; charset=utf-8"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filterQuery\": \"<string>\",\n    \"sortingAttributes\": {\n        \"sortAscending\": \"<boolean>\",\n        \"sortFieldName\": \"<string>\"\n    }\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId",
																"records"
															],
															"query": [
																{
																	"key": "scrollToken",
																	"value": "<string>",
																	"description": "The **scrollToken** value from the previous response. \n\n You can use it to get the next page of results. Without it, the first page is always returned."
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "The number of records per result page. \n\n If not set, each page contains 100 results. \n\n Maximum allowed value is `10000`."
																}
															],
															"variable": [
																{
																	"key": "customDeviceId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required custom device."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-post-job) request."
																}
															]
														},
														"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-get-job-status) request. \n\nLong results split into several pages. By default, a page contains 100 results. You can change this value with the **pageSize** query parameter, up to 10,000."
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filterQuery\": \"<string>\",\n    \"sortingAttributes\": {\n        \"sortAscending\": \"<boolean>\",\n        \"sortFieldName\": \"<string>\"\n    }\n}"
																},
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId/records?scrollToken=<string>&pageSize=<integer>",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"custom-devices",
																		":customDeviceId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records"
																	],
																	"query": [
																		{
																			"key": "scrollToken",
																			"value": "<string>"
																		},
																		{
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customDeviceId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Gets the top values of fields present in the content of the analyzed log",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; charset=utf-8"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"filterQuery\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId/records/top",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId",
																"records",
																"top"
															],
															"variable": [
																{
																	"key": "customDeviceId",
																	"value": "<string>",
																	"description": "(Required) The Dynatrace entity ID of the required custom device."
																},
																{
																	"key": "jobId",
																	"value": "<string>",
																	"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-post-job) request."
																}
															]
														},
														"description": "Results are available only when the status of the analysis job for this log is `READY`. To check the job status, use the [GET analysis job status](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-get-job-status) request."
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"filterQuery\": \"`testCustomField` = 4624\"\n}"
																},
																"url": {
																	"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId/records/top",
																	"host": [
																		"{{tenant}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"entity",
																		"infrastructure",
																		"custom-devices",
																		":customDeviceId",
																		"logs",
																		"jobs",
																		":jobId",
																		"records",
																		"top"
																	],
																	"variable": [
																		{
																			"key": "customDeviceId"
																		},
																		{
																			"key": "jobId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Gets status of the specified log analysis job",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"custom-devices",
														":customDeviceId",
														"logs",
														"jobs",
														":jobId"
													],
													"variable": [
														{
															"key": "customDeviceId",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required custom device."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"description": "(Required) The ID of the required log analysis job. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-post-job) request."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "customDeviceId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes or cancels the specified log analysis job",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"custom-devices",
														":customDeviceId",
														"logs",
														"jobs",
														":jobId"
													],
													"variable": [
														{
															"key": "customDeviceId",
															"value": "<string>",
															"description": "(Required) The Dynatrace entity ID of the required custom device."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"description": "(Required) The ID of the log analysis job to be deleted. \n\n You can retrieve it from the response of the [POST analysis job](https://www.dynatrace.com/support/help/shortlink/api-log-analytics-custom-device-post-job) request."
														}
													]
												}
											},
											"response": [
												{
													"name": "Not found. See the response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "customDeviceId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Success. The job has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "customDeviceId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. See the response body for details",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/jobs/:jobId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"entity",
																"infrastructure",
																"custom-devices",
																":customDeviceId",
																"logs",
																"jobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "customDeviceId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Lists all the available logs on the specified custom device",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"custom-devices",
												":customDeviceId",
												"logs"
											],
											"variable": [
												{
													"key": "customDeviceId",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required custom device."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"custom-devices",
														":customDeviceId",
														"logs"
													],
													"variable": [
														{
															"key": "customDeviceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Starts the analysis job for the specified custom device log",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"parsingMode\": \"<string>\",\n    \"customParsingPatterns\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"custom-devices",
												":customDeviceId",
												"logs",
												":logPath"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>",
													"description": "Narrows down the scope of the analysis to the entries, matching the specified criteria. \n\nThe criteria must use the [Dynatrace search query language](https://www.dynatrace.com/support/help/shortlink/log-viewer#anchor-query-syntax)."
												},
												{
													"key": "startTimestamp",
													"value": "<long>",
													"description": "The start timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then 2 hours behind from current timestamp is used."
												},
												{
													"key": "endTimestamp",
													"value": "<long>",
													"description": "The end timestamp of the analysis range, in UTC milliseconds. \n\n If not set, then the current timestamp is used."
												}
											],
											"variable": [
												{
													"key": "customDeviceId",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required custom device."
												},
												{
													"key": "logPath",
													"value": "<string>",
													"description": "(Required) The full pathname of the log."
												}
											]
										},
										"description": "The response returns the ID of the job."
									},
									"response": [
										{
											"name": "Not found. See the response body for details.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"custom-devices",
														":customDeviceId",
														"logs",
														":logPath"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "customDeviceId"
														},
														{
															"key": "logPath"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. See the response body for details.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"custom-devices",
														":customDeviceId",
														"logs",
														":logPath"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "customDeviceId"
														},
														{
															"key": "logPath"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success. The response body contains the ID of the job.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"parsingMode\": \"json\",\n    \"customParsingPatterns\": \"\\\"user %{STRING:User} logged\\\", \\\"job took %{INTEGER:Time} ms\\\"\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/infrastructure/custom-devices/:customDeviceId/logs/:logPath?query=<string>&startTimestamp=<long>&endTimestamp=<long>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"infrastructure",
														"custom-devices",
														":customDeviceId",
														"logs",
														":logPath"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startTimestamp",
															"value": "<long>"
														},
														{
															"key": "endTimestamp",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "customDeviceId"
														},
														{
															"key": "logPath"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "nostrud culpa non"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Creates or updates a custom device, or reports metric data points to the custom device.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"<string>\",\n    \"group\": \"<string>\",\n    \"ipAddresses\": [\n        \"<string>\"\n    ],\n    \"listenPorts\": [\n        \"<integer>\"\n    ],\n    \"type\": \"<string>\",\n    \"favicon\": \"<string>\",\n    \"configUrl\": \"<string>\",\n    \"properties\": \"<object>\",\n    \"tags\": [\n        \"<string>\"\n    ],\n    \"series\": [\n        {\n            \"dataPoints\": [\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ],\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ]\n            ],\n            \"timeseriesId\": \"<string>\",\n            \"dimensions\": \"<object>\"\n        },\n        {\n            \"dataPoints\": [\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ],\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ]\n            ],\n            \"timeseriesId\": \"<string>\",\n            \"dimensions\": \"<object>\"\n        }\n    ],\n    \"hostNames\": [\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/entity/infrastructure/custom/:customDeviceId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"entity",
										"infrastructure",
										"custom",
										":customDeviceId"
									],
									"variable": [
										{
											"key": "customDeviceId",
											"value": "<string>",
											"description": "(Required) The ID of the custom device. \n\n If you use the ID of an existing device, the respective parameters will be updated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"group\": \"<string>\",\n    \"ipAddresses\": [\n        \"<string>\"\n    ],\n    \"listenPorts\": [\n        \"<integer>\"\n    ],\n    \"type\": \"<string>\",\n    \"favicon\": \"<string>\",\n    \"configUrl\": \"<string>\",\n    \"properties\": \"<object>\",\n    \"tags\": [\n        \"<string>\"\n    ],\n    \"series\": [\n        {\n            \"dataPoints\": [\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ],\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ]\n            ],\n            \"timeseriesId\": \"<string>\",\n            \"dimensions\": \"<object>\"\n        },\n        {\n            \"dataPoints\": [\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ],\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ]\n            ],\n            \"timeseriesId\": \"<string>\",\n            \"dimensions\": \"<object>\"\n        }\n    ],\n    \"hostNames\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/custom/:customDeviceId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"custom",
												":customDeviceId"
											],
											"variable": [
												{
													"key": "customDeviceId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success. The custom device has been created or updated.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"group\": \"<string>\",\n    \"ipAddresses\": [\n        \"<string>\"\n    ],\n    \"listenPorts\": [\n        \"<integer>\"\n    ],\n    \"type\": \"<string>\",\n    \"favicon\": \"<string>\",\n    \"configUrl\": \"<string>\",\n    \"properties\": \"<object>\",\n    \"tags\": [\n        \"<string>\"\n    ],\n    \"series\": [\n        {\n            \"dataPoints\": [\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ],\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ]\n            ],\n            \"timeseriesId\": \"<string>\",\n            \"dimensions\": \"<object>\"\n        },\n        {\n            \"dataPoints\": [\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ],\n                [\n                    \"<float>\",\n                    \"<float>\"\n                ]\n            ],\n            \"timeseriesId\": \"<string>\",\n            \"dimensions\": \"<object>\"\n        }\n    ],\n    \"hostNames\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/entity/infrastructure/custom/:customDeviceId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"infrastructure",
												"custom",
												":customDeviceId"
											],
											"variable": [
												{
													"key": "customDeviceId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "applications",
					"item": [
						{
							"name": "{me Identifier}",
							"item": [
								{
									"name": "Gets parameters of the specified application",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"applications",
												":meIdentifier"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required application."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"applications",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates parameters of the specified application",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"applications",
												":meIdentifier"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the application you want to update."
												}
											]
										}
									},
									"response": [
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"applications",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success. The parameters of the application have been updated.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"applications",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets baseline data for the specified application | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier/baseline",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"applications",
												":meIdentifier",
												"baseline"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required application."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/applications/:meIdentifier/baseline",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"applications",
														":meIdentifier",
														"baseline"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Gets the list of all applications in your environment along with their parameters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/entity/applications?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"entity",
										"applications"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "<long>",
											"description": "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used."
										},
										{
											"key": "endTimestamp",
											"value": "<long>",
											"description": "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days."
										},
										{
											"key": "relativeTime",
											"value": "<string>",
											"description": "The relative timeframe, back from now."
										},
										{
											"key": "tag",
											"value": "<string>",
											"description": "Filters the resulting set of applications by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The application has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`."
										},
										{
											"key": "entity",
											"value": "<string>",
											"description": "Filters result to the specified applications only. \n\n To specify several applications use the following format: `entity=ID1&entity=ID2`."
										},
										{
											"key": "managementZone",
											"value": "<long>",
											"description": "Only return applications that are part of the specified management zone."
										},
										{
											"key": "includeDetails",
											"value": "true",
											"description": "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of applications per result page. \n\n If not set, pagination is not used and the result contains all applications fitting the specified filtering criteria."
										},
										{
											"key": "nextPageKey",
											"value": "<string>",
											"description": "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages."
										}
									]
								},
								"description": "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/applications?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"applications"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>"
												},
												{
													"key": "endTimestamp",
													"value": "<long>"
												},
												{
													"key": "relativeTime",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												},
												{
													"key": "entity",
													"value": "<string>"
												},
												{
													"key": "managementZone",
													"value": "<long>"
												},
												{
													"key": "includeDetails",
													"value": "true"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "nextPageKey",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Total-Count",
											"value": "81866588",
											"description": "The estimated number of results."
										},
										{
											"key": "Next-Page-Key",
											"value": "nostrud culpa non",
											"description": "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded."
										},
										{
											"key": "Page-Size",
											"value": "nostrud culpa non",
											"description": "The maximum number of results per page."
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/applications?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"applications"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>"
												},
												{
													"key": "endTimestamp",
													"value": "<long>"
												},
												{
													"key": "relativeTime",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												},
												{
													"key": "entity",
													"value": "<string>"
												},
												{
													"key": "managementZone",
													"value": "<long>"
												},
												{
													"key": "includeDetails",
													"value": "true"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "nextPageKey",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "services",
					"item": [
						{
							"name": "{me Identifier}",
							"item": [
								{
									"name": "Gets parameters of the specified service",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"services",
												":meIdentifier"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required service."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"services",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates parameters of the specified service",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tags\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"services",
												":meIdentifier"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the service you're inquiring."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The parameters of the service have been updated.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"services",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"tags\": [\n        \"office-linz\",\n        \"office-klagenfurt\"\n    ]\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"services",
														":meIdentifier"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Gets baseline data for the specified service | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier/baseline",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"services",
												":meIdentifier",
												"baseline"
											],
											"variable": [
												{
													"key": "meIdentifier",
													"value": "<string>",
													"description": "(Required) The Dynatrace entity ID of the required service."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/entity/services/:meIdentifier/baseline",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"entity",
														"services",
														":meIdentifier",
														"baseline"
													],
													"variable": [
														{
															"key": "meIdentifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Lists all available services in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/entity/services?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"entity",
										"services"
									],
									"query": [
										{
											"key": "startTimestamp",
											"value": "<long>",
											"description": "The start timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then 72 hours behind from now is used."
										},
										{
											"key": "endTimestamp",
											"value": "<long>",
											"description": "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf not set, then the current timestamp is used. \n\nThe timeframe must not exceed 3 days."
										},
										{
											"key": "relativeTime",
											"value": "<string>",
											"description": "The relative timeframe, back from now."
										},
										{
											"key": "tag",
											"value": "<string>",
											"description": "Filters the resulting set of services by the specified tag. You can specify several tags in the following format: `tag=tag1&tag=tag2`. The service has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags, use the following format: `tag=[context]key:value`. For custom key-value tags, omit the context: `tag=key:value`."
										},
										{
											"key": "entity",
											"value": "<string>",
											"description": "Filters result to the specified services only. \n\n To specify several services use the following format: `entity=ID1&entity=ID2`."
										},
										{
											"key": "managementZone",
											"value": "<long>",
											"description": "Only return services that are part of the specified management zone."
										},
										{
											"key": "includeDetails",
											"value": "true",
											"description": "Includes (`true`) or excludes (`false`) details which are queried from related entities.\n\nExcluding details may make queries faster. \n\nIf not set, then `true` is used."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of services per result page. \n\n If not set, pagination is not used and the result contains all services fitting the specified filtering criteria."
										},
										{
											"key": "nextPageKey",
											"value": "<string>",
											"description": "The cursor for the next page of results. You can find it in the **Next-Page-Key** header of the previous response. \n\nIf you're using pagination, the first page is always returned without this cursor. \n\nYou must keep all other query parameters as they were in the first request to obtain subsequent pages."
										}
									]
								},
								"description": "You can narrow down the output by specifying filtering parameters for the request. \n\nYou can additionally limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Then use the URL-encoded cursor from the **Next-Page-Key** response header in the **nextPageKey** query parameter to obtain subsequent pages."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/services?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"services"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>"
												},
												{
													"key": "endTimestamp",
													"value": "<long>"
												},
												{
													"key": "relativeTime",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												},
												{
													"key": "entity",
													"value": "<string>"
												},
												{
													"key": "managementZone",
													"value": "<long>"
												},
												{
													"key": "includeDetails",
													"value": "true"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "nextPageKey",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Total-Count",
											"value": "81866588",
											"description": "The estimated number of results."
										},
										{
											"key": "Next-Page-Key",
											"value": "nostrud culpa non",
											"description": "The cursor for the next page of results. Without it you'll get the first page again.\n\n The cursor must be URL-encoded."
										},
										{
											"key": "Page-Size",
											"value": "nostrud culpa non",
											"description": "The maximum number of results per page."
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/entity/services?startTimestamp=<long>&endTimestamp=<long>&relativeTime=<string>&tag=<string>&entity=<string>&managementZone=<long>&includeDetails=true&pageSize=<integer>&nextPageKey=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"entity",
												"services"
											],
											"query": [
												{
													"key": "startTimestamp",
													"value": "<long>"
												},
												{
													"key": "endTimestamp",
													"value": "<long>"
												},
												{
													"key": "relativeTime",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												},
												{
													"key": "entity",
													"value": "<string>"
												},
												{
													"key": "managementZone",
													"value": "<long>"
												},
												{
													"key": "includeDetails",
													"value": "true"
												},
												{
													"key": "pageSize",
													"value": "<integer>"
												},
												{
													"key": "nextPageKey",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "problem",
			"item": [
				{
					"name": "details/{problem Id}",
					"item": [
						{
							"name": "close",
							"item": [
								{
									"name": "Closes the specified problem",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/problem/details/:problemId/close",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"problem",
												"details",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "<string>",
													"description": "(Required) The ID of the problem to be closed."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/problem/details/:problemId/close",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"problem",
														"details",
														":problemId",
														"close"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Closes the specified problem and adds a closing comment to it",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/problem/details/:problemId/close?content=<string>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"problem",
												"details",
												":problemId",
												"close"
											],
											"query": [
												{
													"key": "content",
													"value": "<string>",
													"description": "The closing comment."
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "<string>",
													"description": "(Required) The ID of the problem to be closed."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/problem/details/:problemId/close?content=<string>",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"problem",
														"details",
														":problemId",
														"close"
													],
													"query": [
														{
															"key": "content",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "comments",
							"item": [
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "Updates an existing comment to the specified problem",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"comment\": \"<string>\",\n    \"user\": \"<string>\",\n    \"context\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments/:commentId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"problem",
														"details",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "<string>",
															"description": "(Required) The ID of the problem where you want to edit the comment."
														},
														{
															"key": "commentId",
															"value": "<string>",
															"description": "(Required) The ID of the comment you want to edit."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"comment\": \"This is a comment!\",\n    \"user\": \"user1\",\n    \"context\": \"Slack\"\n}"
														},
														"url": {
															"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments/:commentId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"problem",
																"details",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes an existing comment to the specified problem.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments/:commentId",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"problem",
														"details",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "<string>",
															"description": "(Required) The ID of the problem where you want to delete the comment."
														},
														{
															"key": "commentId",
															"value": "<string>",
															"description": "(Required) The ID of the comment to delete."
														}
													]
												}
											},
											"response": [
												{
													"name": "default response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments/:commentId",
															"host": [
																"{{tenant}}"
															],
															"path": [
																"api",
																"v1",
																"problem",
																"details",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Gets all the comments to the specified problem",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"problem",
												"details",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "<string>",
													"description": "(Required) The ID of the problem where you want to read the comments."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"problem",
														"details",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Adds a new comment to the specified problem",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"<string>\",\n    \"user\": \"<string>\",\n    \"context\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"problem",
												"details",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "<string>",
													"description": "(Required) The ID of the problem where you want to add the comment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"comment\": \"This is a comment!\",\n    \"user\": \"user1\",\n    \"context\": \"Slack\"\n}"
												},
												"url": {
													"raw": "{{tenant}}/api/v1/problem/details/:problemId/comments",
													"host": [
														"{{tenant}}"
													],
													"path": [
														"api",
														"v1",
														"problem",
														"details",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Gets the properties of the specified problem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/problem/details/:problemId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"problem",
										"details",
										":problemId"
									],
									"variable": [
										{
											"key": "problemId",
											"value": "<string>",
											"description": "(Required) The ID of the problem you're inquiring."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/problem/details/:problemId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"problem",
												"details",
												":problemId"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Gets the information about problems within the specified timeframe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/problem/feed?relativeTime=<string>&startTimestamp=<long>&endTimestamp=<long>&status=<string>&impactLevel=<string>&severityLevel=<string>&tag=<string>&expandDetails=<boolean>",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"problem",
								"feed"
							],
							"query": [
								{
									"key": "relativeTime",
									"value": "<string>",
									"description": "The relative timeframe of the inquiry, back from the current time."
								},
								{
									"key": "startTimestamp",
									"value": "<long>",
									"description": "The start timestamp of the requested timeframe, in UTC milliseconds."
								},
								{
									"key": "endTimestamp",
									"value": "<long>",
									"description": "The end timestamp of the requested timeframe, in UTC milliseconds. \n\nIf `endTimestamp` is later than the current time, the current time is used. \n\nThe timeframe must not exceed 31 days."
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Filters the result problems by the status."
								},
								{
									"key": "impactLevel",
									"value": "<string>",
									"description": "Filters the result problems by the impact level."
								},
								{
									"key": "severityLevel",
									"value": "<string>",
									"description": "Filters the result problems by the severity level."
								},
								{
									"key": "tag",
									"value": "<string>",
									"description": "Filters the result problems by the tags of affected entities.You can specify several tags in the following format: `tag=tag1&tag=tag2`. The problem has to match *all* the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use following format: `[context]key:value`."
								},
								{
									"key": "expandDetails",
									"value": "<boolean>",
									"description": "Includes(`true`) or excludes(`false`) related events to the response. \n\n Defaults to `false`, excluding the related events."
								}
							]
						},
						"description": "A problem is included in the response, if either start or end timestamp of the problem is within the defined timeframe. \n\nThe output is limited to **5,000** problems. You can narrow it down by specifying query parameters."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/problem/feed?relativeTime=<string>&startTimestamp=<long>&endTimestamp=<long>&status=<string>&impactLevel=<string>&severityLevel=<string>&tag=<string>&expandDetails=<boolean>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"problem",
										"feed"
									],
									"query": [
										{
											"key": "relativeTime",
											"value": "<string>"
										},
										{
											"key": "startTimestamp",
											"value": "<long>"
										},
										{
											"key": "endTimestamp",
											"value": "<long>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "impactLevel",
											"value": "<string>"
										},
										{
											"key": "severityLevel",
											"value": "<string>"
										},
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "expandDetails",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists the number of open problems, split by impact level",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/problem/status",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"problem",
								"status"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/problem/status",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"problem",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "thresholds",
			"item": [
				{
					"name": "{threshold Id}",
					"item": [
						{
							"name": "Creates or updates an existing threshold for a plugin or a custom event",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"thresholdId\": \"<string>\",\n    \"timeseriesId\": \"<string>\",\n    \"threshold\": \"<double>\",\n    \"alertCondition\": \"<string>\",\n    \"samples\": \"<integer>\",\n    \"violatingSamples\": \"<integer>\",\n    \"dealertingSamples\": \"<integer>\",\n    \"eventType\": \"<string>\",\n    \"eventName\": \"<string>\",\n    \"description\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/thresholds/:thresholdId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"thresholds",
										":thresholdId"
									],
									"variable": [
										{
											"key": "thresholdId",
											"value": "<string>",
											"description": "(Required) The ID of the threshold to create or update."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"thresholdId\": \"tooManyCoffeesMade\",\n    \"timeseriesId\": \"received.coffees\",\n    \"threshold\": 10000,\n    \"alertCondition\": \"ABOVE\",\n    \"samples\": 1,\n    \"violatingSamples\": 1,\n    \"dealertingSamples\": 1,\n    \"eventType\": \"AVAILABILITY_EVENT\",\n    \"eventName\": \"Too many coffees made\",\n    \"description\": \"The coffee machine must not produce a number of coffees {alert_condition} {threshold}.\",\n    \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/thresholds/:thresholdId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"thresholds",
												":thresholdId"
											],
											"variable": [
												{
													"key": "thresholdId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified threshold",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/thresholds/:thresholdId",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"thresholds",
										":thresholdId"
									],
									"variable": [
										{
											"key": "thresholdId",
											"value": "<string>",
											"description": "(Required) The ID of the threshold to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The threshold has been deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/thresholds/:thresholdId",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"thresholds",
												":thresholdId"
											],
											"variable": [
												{
													"key": "thresholdId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Gets all configured thresholds for plugins and custom events in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/thresholds?filter=<string>",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"thresholds"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filters thresholds by the source."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/thresholds?filter=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"thresholds"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "timeseries",
			"item": [
				{
					"name": "{timeseries Identifier}",
					"item": [
						{
							"name": "Gets the parameters of the specified metric and, optionally, its data points",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier?includeData=<boolean>&aggregationType=<string>&startTimestamp=<long>&endTimestamp=<long>&predict=<boolean>&relativeTime=<string>&queryMode=<string>&entity=<string>&tag=<string>&percentile=<integer>&includeParentIds=<boolean>&considerMaintenanceWindowsForAvailability=<boolean>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"timeseries",
										":timeseriesIdentifier"
									],
									"query": [
										{
											"key": "includeData",
											"value": "<boolean>",
											"description": "The flag to include data points in the response. Set to `true` to obtain data points. You must also specify the timeframe and aggregation type. \n\nDefaults to `false`, meaning data points are not included."
										},
										{
											"key": "aggregationType",
											"value": "<string>",
											"description": "The aggregation type for the resulting data points. \n\nIf the requested metric doesn't support the specified aggregation, the request will result in an error."
										},
										{
											"key": "startTimestamp",
											"value": "<long>",
											"description": "The start timestamp of the requested timeframe, in UTC milliseconds."
										},
										{
											"key": "endTimestamp",
											"value": "<long>",
											"description": "The end timestamp of the requested timeframe, in milliseconds (UTC). \n\nIf later than the current time, Dynatrace automatically uses the current time instead. \n\nThe timeframe must not exceed 6 months."
										},
										{
											"key": "predict",
											"value": "<boolean>",
											"description": "The flag to predict future data points."
										},
										{
											"key": "relativeTime",
											"value": "<string>",
											"description": "The relative timeframe, back from the current time."
										},
										{
											"key": "queryMode",
											"value": "<string>",
											"description": "The type of result that the call should return. Valid result modes are: \n\n`series`: returns all the data points of the timeseries in specified timeframe. \n`total`: returns one scalar value for the specified timeframe. \n\nBy default, the `series` mode is used."
										},
										{
											"key": "entity",
											"value": "<string>",
											"description": "Filters requested data points by the entity that should deliver them. Allowed values are Dynatrace entity IDs. \n\nYou can specify several entities in the following format: `entity=entity1&entity=entity2`. The entity has to match at least one of the specified IDs. \n\nIf the selected entity doesn't support the requested timeseries, the request will result in an error."
										},
										{
											"key": "tag",
											"value": "<string>",
											"description": "Filters requested data points by entity which should deliver them. Only data from entities with the specified tag is delivered. \n\nYou can specify several tags in the following format: `tag=tag1&tag=tag2`. The entity has to match **all** the specified tags. \n\nIn case of key-value tags, such as imported AWS or CloudFoundry tags use the `key:value` format. If there's also a context, use the `[context]key:value` format."
										},
										{
											"key": "percentile",
											"value": "<integer>",
											"description": "Specifies which percentile of the selected response time metric should be delivered.\n\nApplicable only to the `PERCENTILE` aggregation type. \n\nValid values for percentile are between 1 and 99. \n\nKeep in mind that percentile export is possible only for response-time-based metrics such as application and service response times."
										},
										{
											"key": "includeParentIds",
											"value": "<boolean>",
											"description": "If set to true the result exposes dimension mappings between parent entities and their children.\n\nFor instance: SERVICE-0000000000000001, SERVICE_METHOD-0000000000000001"
										},
										{
											"key": "considerMaintenanceWindowsForAvailability",
											"value": "<boolean>",
											"description": "Exclude (`true`) or include (`false`) data points from any [maintenance window](https://www.dynatrace.com/support/help/shortlink/maintenance-window), defined in your environment."
										}
									],
									"variable": [
										{
											"key": "timeseriesIdentifier",
											"value": "<string>",
											"description": "(Required) The case-sensitive ID of the timeseries, from which you want to read parameters and data points."
										}
									]
								},
								"description": "To obtain data points, set **includeData** to `true`. \n\nYou can obtain either data points or the scalar result of the specified timeseries, depending on the **queryMode**. \n\nTo obtain data points, you must specify the timeframe, either as **relativeTime** or as a combination of **startTimestamp** and **endTimestamp**. \n\nYou must also provide the **aggregationType**, supported by the metric."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier?includeData=<boolean>&aggregationType=<string>&startTimestamp=<long>&endTimestamp=<long>&predict=<boolean>&relativeTime=<string>&queryMode=<string>&entity=<string>&tag=<string>&percentile=<integer>&includeParentIds=<boolean>&considerMaintenanceWindowsForAvailability=<boolean>",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"timeseries",
												":timeseriesIdentifier"
											],
											"query": [
												{
													"key": "includeData",
													"value": "<boolean>"
												},
												{
													"key": "aggregationType",
													"value": "<string>"
												},
												{
													"key": "startTimestamp",
													"value": "<long>"
												},
												{
													"key": "endTimestamp",
													"value": "<long>"
												},
												{
													"key": "predict",
													"value": "<boolean>"
												},
												{
													"key": "relativeTime",
													"value": "<string>"
												},
												{
													"key": "queryMode",
													"value": "<string>"
												},
												{
													"key": "entity",
													"value": "<string>"
												},
												{
													"key": "tag",
													"value": "<string>"
												},
												{
													"key": "percentile",
													"value": "<integer>"
												},
												{
													"key": "includeParentIds",
													"value": "<boolean>"
												},
												{
													"key": "considerMaintenanceWindowsForAvailability",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "timeseriesIdentifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a new custom metric",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"<string>\",\n    \"unit\": \"<string>\",\n    \"dimensions\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"types\": [\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"timeseries",
										":timeseriesIdentifier"
									],
									"variable": [
										{
											"key": "timeseriesIdentifier",
											"value": "<string>",
											"description": "(Required) The ID for the new metric. It must start with the `custom:` prefix. \n\nYou can use alphanumeric characters and the following punctuation marks: periods (`.`), hyphens (`-`), and commas (`,`). A number cannot follow a punctuation mark. \n\nIf you use the ID of an existing metric the respective parameters will be updated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The custom metric has been created.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"unit\": \"<string>\",\n    \"dimensions\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"types\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"timeseries",
												":timeseriesIdentifier"
											],
											"variable": [
												{
													"key": "timeseriesIdentifier"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists all available metric data points, matching the specified parameters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"timeseriesId\": \"<string>\",\n    \"aggregationType\": \"<string>\",\n    \"startTimestamp\": \"<long>\",\n    \"endTimestamp\": \"<long>\",\n    \"predict\": \"<boolean>\",\n    \"relativeTime\": \"<string>\",\n    \"queryMode\": \"<string>\",\n    \"entities\": [\n        \"<string>\"\n    ],\n    \"tags\": [\n        \"<string>\"\n    ],\n    \"filters\": \"<object>\",\n    \"percentile\": \"<integer>\",\n    \"includeParentIds\": \"<boolean>\",\n    \"considerMaintenanceWindowsForAvailability\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"timeseries",
										":timeseriesIdentifier"
									],
									"variable": [
										{
											"key": "timeseriesIdentifier",
											"value": "<string>",
											"description": "(Required) The case-sensitive ID of the timeseries from which you want to read parameters and data points."
										}
									]
								},
								"description": "Provides advanced filtering possibilities, comparing to the `GET /timeseries/{metricIdentifier}` request."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"timeseriesId\": \"<string>\",\n    \"aggregationType\": \"<string>\",\n    \"startTimestamp\": \"<long>\",\n    \"endTimestamp\": \"<long>\",\n    \"predict\": \"<boolean>\",\n    \"relativeTime\": \"<string>\",\n    \"queryMode\": \"<string>\",\n    \"entities\": [\n        \"<string>\"\n    ],\n    \"tags\": [\n        \"<string>\"\n    ],\n    \"filters\": \"<object>\",\n    \"percentile\": \"<integer>\",\n    \"includeParentIds\": \"<boolean>\",\n    \"considerMaintenanceWindowsForAvailability\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"timeseries",
												":timeseriesIdentifier"
											],
											"variable": [
												{
													"key": "timeseriesIdentifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified custom metric",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"timeseries",
										":timeseriesIdentifier"
									],
									"variable": [
										{
											"key": "timeseriesIdentifier",
											"value": "<string>",
											"description": "(Required) The ID of the metric to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The custom metric has been deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/timeseries/:timeseriesIdentifier",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"timeseries",
												":timeseriesIdentifier"
											],
											"variable": [
												{
													"key": "timeseriesIdentifier"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Lists all metric definitions, with the parameters of each metric",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/timeseries?source=<string>&detailedSource=<string>",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"timeseries"
							],
							"query": [
								{
									"key": "source",
									"value": "<string>",
									"description": "The type of the metric, such as BUILTIN or CUSTOM."
								},
								{
									"key": "detailedSource",
									"value": "<string>",
									"description": "The feature where metrics originates, such as Synthetic or RUM."
								}
							]
						},
						"description": "You can specify filtering parameters to return only matched metrics. If no parameters are specified, the call will list all the defined metrics."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/timeseries?source=<string>&detailedSource=<string>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"timeseries"
									],
									"query": [
										{
											"key": "source",
											"value": "<string>"
										},
										{
											"key": "detailedSource",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Lists token metadata by token ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/tokens/:id",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the required token."
										}
									]
								},
								"description": "The token itself is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates the specified token",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"revoked\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/tokens/:id",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Failed. You can't update the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success. The token has been updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/tokens/:id",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{tenant}}/api/v1/tokens/:id",
											"host": [
												"{{tenant}}"
											],
											"path": [
												"api",
												"v1",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Lists available tokens in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/tokens?limit=1000&user=<string>&permissions=<string>&from=<long>&to=<long>",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000",
									"description": "Limits the maximum number of returned tokens. \n\n If not set the value of `1000` is used. \n\n Maximum value is 1000000."
								},
								{
									"key": "user",
									"value": "<string>",
									"description": "Filters the resulting set of tokens by user, who owns the token."
								},
								{
									"key": "permissions",
									"value": "<string>",
									"description": "Filters the resulting set of tokens by permissions, assigned to the token. \n\n You can specify several permissions in the following format: `permissions=permission1&permissions=permission2`. The token must have *all* the specified permissions."
								},
								{
									"key": "from",
									"value": "<long>",
									"description": "Last used after this timestamp (UTC milliseconds)."
								},
								{
									"key": "to",
									"value": "<long>",
									"description": "Last used before this timestamp (UTC milliseconds)."
								}
							]
						},
						"description": "You can narrow down the output by adding parameters. The token has to match *all* the specified parameters. \n\n You can also specify the limit of returned tokens.\n\n **This list may contain tokens which were created automatically** (e.g. InstallerDownload, Mobile, ...) and are not visible on the `Settings` page. Deleting those might have unintended side-effects as they might still be in use."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tenant}}/api/v1/tokens?limit=1000&user=<string>&permissions=<string>&from=<long>&to=<long>",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "user",
											"value": "<string>"
										},
										{
											"key": "permissions",
											"value": "<string>"
										},
										{
											"key": "from",
											"value": "<long>"
										},
										{
											"key": "to",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creates a new token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ],\n    \"expiresIn\": {\n        \"value\": \"<long>\",\n        \"unit\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{tenant}}/api/v1/tokens",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Failed. The input is invalid. Response body provides details.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ],\n    \"expiresIn\": {\n        \"value\": \"<long>\",\n        \"unit\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/tokens",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success. The token has been created. The response body contains the token itself.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"scopes\": [\n        \"<string>\"\n    ],\n    \"expiresIn\": {\n        \"value\": \"<long>\",\n        \"unit\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/tokens",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "nostrud culpa non",
									"description": "Token Id"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists token metadata by token itself",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{tenant}}/api/v1/tokens/lookup",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"tokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"abcdefjhij1234567890\"\n}"
								},
								"url": {
									"raw": "{{tenant}}/api/v1/tokens/lookup",
									"host": [
										"{{tenant}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gets the current version of the Dynatrace server",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{tenant}}/api/v1/config/clusterversion",
					"host": [
						"{{tenant}}"
					],
					"path": [
						"api",
						"v1",
						"config",
						"clusterversion"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/config/clusterversion",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"config",
								"clusterversion"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"version\": \"occaecat eiusmod velit aliqua\"\n}"
				}
			]
		},
		{
			"name": "Gets the current time of the Dynatrace server in UTC milliseconds",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{tenant}}/api/v1/time",
					"host": [
						"{{tenant}}"
					],
					"path": [
						"api",
						"v1",
						"time"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tenant}}/api/v1/time",
							"host": [
								"{{tenant}}"
							],
							"path": [
								"api",
								"v1",
								"time"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Api-Token",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8dea0214-17e7-4996-8973-a67541a31f60",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "67d03205-2ffa-4d92-bdcf-56104d254ddd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "1c822cc7-d832-4bab-9f8c-fa34a2e78d4e",
			"key": "baseUrl",
			"value": "{{tenant}}/api/v1"
		}
	],
	"protocolProfileBehavior": {}
}